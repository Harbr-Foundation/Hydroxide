2025-02-11T04:18:29.662893Z TRACE hydroxide::cli: No custom port was specified, defaulting to 80
2025-02-11T04:18:29.663170Z TRACE hydroxide::config: Built Config: 
Url = localhost:80,
https = false,
self signed = false,
loglevel = Info
2025-02-11T04:18:29.665372Z  INFO hydroxide::server: Starting plain HTTP server on 0.0.0.0:80
2025-02-11T04:19:20.610447Z TRACE axum::serve: connection 127.0.0.1:51774 accepted
2025-02-11T04:19:24.602313Z TRACE axum::serve: connection 127.0.0.1:51777 accepted
2025-02-11T04:19:24.745726Z  INFO hydroxide::server: Initialized repository: C:/Users/Chance/Documents/Development/Hydroxide/repos/caznix/harbr/
2025-02-11T04:20:02.453939Z TRACE axum::serve: connection 127.0.0.1:51791 accepted
2025-02-11T04:20:46.314673Z TRACE axum::serve: connection 127.0.0.1:51838 accepted
2025-02-11T04:20:46.567517Z TRACE axum::serve: connection 127.0.0.1:51840 accepted
2025-02-11T04:20:46.568229Z  INFO hydroxide::server: PROPFIND request
2025-02-11T04:22:48.435099Z  INFO hydroxide::server: Shutting down server...
2025-02-11T04:22:48.435473Z TRACE axum::serve: received graceful shutdown signal. Telling tasks to shutdown
2025-02-11T04:22:48.435654Z TRACE axum::serve: signal received, not accepting new connections
2025-02-11T04:22:48.435857Z TRACE axum::serve: waiting for 0 task(s) to finish
2025-02-11T04:23:44.098852Z TRACE hydroxide::cli: No custom port was specified, defaulting to 80
2025-02-11T04:23:44.099049Z TRACE hydroxide::config: Built Config: 
Url = localhost:80,
https = false,
self signed = false,
loglevel = Info
2025-02-11T04:23:44.100890Z  INFO hydroxide::server: Starting plain HTTP server on 0.0.0.0:80
2025-02-11T04:24:06.737310Z  INFO hydroxide::server: Shutting down server...
2025-02-11T04:24:06.737451Z TRACE axum::serve: received graceful shutdown signal. Telling tasks to shutdown
2025-02-11T04:24:06.737620Z TRACE axum::serve: signal received, not accepting new connections
2025-02-11T04:24:06.737788Z TRACE axum::serve: waiting for 0 task(s) to finish
2025-02-11T04:24:13.869499Z TRACE hydroxide::cli: No custom port was specified, defaulting to 80
2025-02-11T04:24:13.869697Z TRACE hydroxide::config: Built Config: 
Url = localhost:80,
https = false,
self signed = false,
loglevel = Info
2025-02-11T04:24:13.872425Z  INFO hydroxide::server: Starting HTTP redirect server on 0.0.0.0:80
2025-02-11T04:24:13.872722Z  INFO hydroxide::server: Starting HTTPS server on 0.0.0.0:80
2025-02-11T04:26:41.479364Z TRACE hydroxide::cli: No custom port was specified, defaulting to 80
2025-02-11T04:26:41.479620Z TRACE hydroxide::config: Built Config: 
Url = localhost:80,
https = false,
self signed = false,
loglevel = Info
2025-02-11T04:26:41.482828Z  INFO hydroxide::server: Starting HTTP redirect server on 0.0.0.0:80
2025-02-11T04:26:41.483121Z  INFO hydroxide::server: Starting HTTPS server on 0.0.0.0:80
2025-02-11T04:34:30.803469Z TRACE hydroxide::cli: No custom port was specified, defaulting to 80
2025-02-11T04:34:30.803933Z TRACE hydroxide::config: Built Config: 
Url = localhost:80,
https = false,
self signed = false,
loglevel = Info
2025-02-11T04:34:49.893924Z TRACE hydroxide::cli: No custom port was specified, defaulting to 80
2025-02-11T04:34:49.894090Z TRACE hydroxide::config: Built Config: 
Url = localhost:80,
https = false,
self signed = false,
loglevel = Info
2025-02-11T04:35:17.507356Z TRACE hydroxide::cli: No custom port was specified, defaulting to 80
2025-02-11T04:35:17.507588Z TRACE hydroxide::config: Built Config: 
Url = localhost:80,
https = false,
self signed = false,
loglevel = Info
2025-02-11T04:35:17.510352Z  INFO hydroxide::server: Starting HTTP redirect server on 0.0.0.0:80
2025-02-11T04:35:17.510573Z  INFO hydroxide::server: Starting HTTPS server on 0.0.0.0:443
2025-02-11T04:42:12.270946Z  INFO hydroxide::server: Shutting down server...
2025-02-11T04:42:12.271142Z TRACE axum::serve: received graceful shutdown signal. Telling tasks to shutdown
2025-02-11T04:42:12.271399Z TRACE axum::serve: signal received, not accepting new connections
2025-02-11T04:42:12.271556Z TRACE axum::serve: waiting for 0 task(s) to finish
2025-02-11T04:47:10.368698Z TRACE hydroxide::cli: No custom port was specified, defaulting to 80
2025-02-11T04:47:10.368915Z TRACE hydroxide::config: Built Config: 
Url = localhost:80,
https = false,
self signed = false,
loglevel = Info
2025-02-11T04:47:10.370789Z  INFO hydroxide::server: Starting HTTP redirect server on 0.0.0.0:80
2025-02-11T04:47:10.370946Z  INFO hydroxide::server: Starting HTTPS server on 0.0.0.0:443
2025-02-11T04:47:14.009779Z DEBUG server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::codec::framed_write: send frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }
2025-02-11T04:47:14.009963Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::frame::settings: encoding SETTINGS; len=24
2025-02-11T04:47:14.010184Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::frame::settings: encoding setting; val=MaxConcurrentStreams(200)
2025-02-11T04:47:14.010303Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::frame::settings: encoding setting; val=InitialWindowSize(1048576)
2025-02-11T04:47:14.010436Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::frame::settings: encoding setting; val=MaxFrameSize(16384)
2025-02-11T04:47:14.010561Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::frame::settings: encoding setting; val=MaxHeaderListSize(16384)
2025-02-11T04:47:14.010690Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::codec::framed_write: encoded settings rem=33
2025-02-11T04:47:14.010842Z TRACE server_handshake: h2::server: state=Flushing(_)
2025-02-11T04:47:14.010968Z TRACE server_handshake:flush:FramedWrite::flush: h2::codec::framed_write: queued_data_frame=false
2025-02-11T04:47:14.011128Z TRACE server_handshake:flush:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:47:14.011231Z TRACE server_handshake: h2::server: flush.poll=Ready
2025-02-11T04:47:14.011391Z TRACE server_handshake: h2::proto::streams::flow_control: inc_window; sz=65535; old=0; new=65535
2025-02-11T04:47:14.012120Z TRACE server_handshake: h2::proto::streams::flow_control: inc_window; sz=65535; old=0; new=65535
2025-02-11T04:47:14.012260Z TRACE server_handshake: h2::proto::streams::prioritize: Prioritize::new; flow=FlowControl { window_size: Window(65535), available: Window(65535) }
2025-02-11T04:47:14.012387Z TRACE server_handshake: h2::server: connection established!
2025-02-11T04:47:14.012490Z TRACE server_handshake: h2::proto::streams::recv: set_target_connection_window; target=1048576; available=65535, reserved=0
2025-02-11T04:47:14.012634Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T04:47:14.012803Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:47:14.012944Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=27
2025-02-11T04:47:14.013100Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=27}: h2::codec::framed_read: decoding frame from 27B
2025-02-11T04:47:14.013285Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=27}: h2::codec::framed_read: frame.kind=Settings
2025-02-11T04:47:14.015704Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=Settings { flags: (0x0), enable_push: 0, max_concurrent_streams: 100, initial_window_size: 65536 }
2025-02-11T04:47:14.016143Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv SETTINGS frame=Settings { flags: (0x0), enable_push: 0, max_concurrent_streams: 100, initial_window_size: 65536 }
2025-02-11T04:47:14.016695Z DEBUG server_handshake:Connection{peer=Server}:poll:poll_ready:FramedWrite::buffer{frame=Settings { flags: (0x1: ACK) }}: h2::codec::framed_write: send frame=Settings { flags: (0x1: ACK) }
2025-02-11T04:47:14.017101Z TRACE server_handshake:Connection{peer=Server}:poll:poll_ready:FramedWrite::buffer{frame=Settings { flags: (0x1: ACK) }}: h2::frame::settings: encoding SETTINGS; len=0
2025-02-11T04:47:14.017482Z TRACE server_handshake:Connection{peer=Server}:poll:poll_ready:FramedWrite::buffer{frame=Settings { flags: (0x1: ACK) }}: h2::codec::framed_write: encoded settings rem=9
2025-02-11T04:47:14.017726Z TRACE server_handshake:Connection{peer=Server}:poll:poll_ready: h2::proto::settings: ACK sent; applying settings
2025-02-11T04:47:14.019448Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:47:14.019608Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=13
2025-02-11T04:47:14.019762Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=13}: h2::codec::framed_read: decoding frame from 13B
2025-02-11T04:47:14.019913Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=13}: h2::codec::framed_read: frame.kind=WindowUpdate
2025-02-11T04:47:14.020054Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=WindowUpdate { stream_id: StreamId(0), size_increment: 1048510465 }
2025-02-11T04:47:14.020177Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv WINDOW_UPDATE frame=WindowUpdate { stream_id: StreamId(0), size_increment: 1048510465 }
2025-02-11T04:47:14.020294Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=1048510465; old=65535; new=1048576000
2025-02-11T04:47:14.024001Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:47:14.024206Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=114
2025-02-11T04:47:14.024374Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}: h2::codec::framed_read: decoding frame from 114B
2025-02-11T04:47:14.024525Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}: h2::codec::framed_read: frame.kind=Headers
2025-02-11T04:47:14.024702Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}: h2::frame::headers: loading headers; flags=(0x5: END_HEADERS | END_STREAM)
2025-02-11T04:47:14.024892Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}:hpack::decode: h2::hpack::decoder: decode
2025-02-11T04:47:14.028006Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}:hpack::decode: h2::hpack::decoder: rem=105 kind=Indexed
2025-02-11T04:47:14.028227Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}:hpack::decode: h2::hpack::decoder: rem=104 kind=Indexed
2025-02-11T04:47:14.028474Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}:hpack::decode: h2::hpack::decoder: rem=103 kind=LiteralWithIndexing
2025-02-11T04:47:14.028753Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}:hpack::decode: h2::hpack::decoder: rem=95 kind=LiteralWithoutIndexing
2025-02-11T04:47:14.029017Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}:hpack::decode: h2::hpack::decoder: rem=56 kind=LiteralWithIndexing
2025-02-11T04:47:14.029274Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}:hpack::decode: h2::hpack::decoder: rem=39 kind=LiteralWithIndexing
2025-02-11T04:47:14.033373Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}:hpack::decode: h2::hpack::decoder: rem=34 kind=LiteralWithIndexing
2025-02-11T04:47:14.033735Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}:hpack::decode: h2::hpack::decoder: rem=14 kind=LiteralWithIndexing
2025-02-11T04:47:14.034075Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=Headers { stream_id: StreamId(1), flags: (0x5: END_HEADERS | END_STREAM) }
2025-02-11T04:47:14.034264Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv HEADERS frame=Headers { stream_id: StreamId(1), flags: (0x5: END_HEADERS | END_STREAM) }
2025-02-11T04:47:14.034434Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=65535; old=0; new=65535
2025-02-11T04:47:14.034571Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=65536; old=0; new=65536
2025-02-11T04:47:14.034742Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::streams: recv_headers; stream=StreamId(1); state=State { inner: Idle }
2025-02-11T04:47:14.040595Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::recv: opening stream; init_window=65535
2025-02-11T04:47:14.040979Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::store: Queue::push_back
2025-02-11T04:47:14.041218Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::store:  -> first entry
2025-02-11T04:47:14.041535Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: HalfClosedRemote(AwaitingHeaders) }; is_closed=false; pending_send_empty=true; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:47:14.041842Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:47:14.042088Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=9
2025-02-11T04:47:14.042365Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=9}: h2::codec::framed_read: decoding frame from 9B
2025-02-11T04:47:14.044919Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=9}: h2::codec::framed_read: frame.kind=Settings
2025-02-11T04:47:14.045161Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=Settings { flags: (0x1: ACK) }
2025-02-11T04:47:14.045329Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv SETTINGS frame=Settings { flags: (0x1: ACK) }
2025-02-11T04:47:14.045472Z DEBUG server_handshake:Connection{peer=Server}:poll: h2::proto::settings: received settings ACK; applying Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }
2025-02-11T04:47:14.045597Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::recv: update_initial_window_size; new=1048576; old=65535
2025-02-11T04:47:14.045720Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::recv: incrementing all windows; inc=983041
2025-02-11T04:47:14.045839Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=983041; old=65535; new=1048576
2025-02-11T04:47:14.045986Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:47:14.049683Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=WindowUpdate { stream_id: StreamId(0), size_increment: 983041 }}: h2::codec::framed_write: send frame=WindowUpdate { stream_id: StreamId(0), size_increment: 983041 }
2025-02-11T04:47:14.049919Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=WindowUpdate { stream_id: StreamId(0), size_increment: 983041 }}: h2::frame::window_update: encoding WINDOW_UPDATE; id=StreamId(0)
2025-02-11T04:47:14.050221Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=WindowUpdate { stream_id: StreamId(0), size_increment: 983041 }}: h2::codec::framed_write: encoded window_update rem=22
2025-02-11T04:47:14.050349Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=983041; old=65535; new=1048576
2025-02-11T04:47:14.050523Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: poll_complete
2025-02-11T04:47:14.050648Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:47:14.050829Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: queued_data_frame=false
2025-02-11T04:47:14.054365Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:47:14.054786Z TRACE h2::proto::streams::streams: next_incoming; id=StreamId(1), state=State { inner: HalfClosedRemote(AwaitingHeaders) }
2025-02-11T04:47:14.054866Z TRACE h2::server: received incoming
2025-02-11T04:47:14.055096Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T04:47:14.055288Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:47:14.055464Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: poll_complete
2025-02-11T04:47:14.055618Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:47:14.055778Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:47:14.058948Z TRACE h2::proto::streams::streams: drop_stream_ref; stream=Stream { id: StreamId(1), state: State { inner: HalfClosedRemote(AwaitingHeaders) }, is_counted: true, ref_count: 2, next_pending_send: None, is_pending_send: false, send_flow: FlowControl { window_size: Window(65536), available: Window(0) }, requested_send_capacity: 0, buffered_send_data: 0, send_task: None, pending_send: Deque { indices: None }, next_pending_send_capacity: None, is_pending_send_capacity: false, send_capacity_inc: false, next_open: None, is_pending_open: false, is_pending_push: false, next_pending_accept: None, is_pending_accept: false, recv_flow: FlowControl { window_size: Window(1048576), available: Window(1048576) }, in_flight_recv_data: 0, next_window_update: None, is_pending_window_update: false, reset_at: None, next_reset_expire: None, pending_recv: Deque { indices: None }, is_recv: false, recv_task: None, push_task: None, pending_push_promises: Queue { indices: None, _p: PhantomData<h2::proto::streams::stream::NextAccept> }, content_length: Omitted }
2025-02-11T04:47:14.059136Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: HalfClosedRemote(AwaitingHeaders) }; is_closed=false; pending_send_empty=true; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:47:14.059699Z TRACE h2::proto::streams::send: send_headers; frame=Headers { stream_id: StreamId(1), flags: (0x5: END_HEADERS | END_STREAM) }; init_window=65536
2025-02-11T04:47:14.059901Z TRACE Prioritize::queue_frame{stream.id=StreamId(1)}: h2::proto::streams::prioritize: schedule_send stream.id=StreamId(1)
2025-02-11T04:47:14.060058Z TRACE Prioritize::queue_frame{stream.id=StreamId(1)}: h2::proto::streams::store: Queue::push_back
2025-02-11T04:47:14.060205Z TRACE Prioritize::queue_frame{stream.id=StreamId(1)}: h2::proto::streams::store:  -> first entry
2025-02-11T04:47:14.060359Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:47:14.060590Z TRACE h2::proto::streams::streams: drop_stream_ref; stream=Stream { id: StreamId(1), state: State { inner: Closed(EndStream) }, is_counted: true, ref_count: 2, next_pending_send: None, is_pending_send: true, send_flow: FlowControl { window_size: Window(65536), available: Window(0) }, requested_send_capacity: 0, buffered_send_data: 0, send_task: Some(Waker { data: 0x26c6caede80, vtable: 0x7ff79efb6be0 }), pending_send: Deque { indices: Some(Indices { head: 0, tail: 0 }) }, next_pending_send_capacity: None, is_pending_send_capacity: false, send_capacity_inc: false, next_open: None, is_pending_open: false, is_pending_push: false, next_pending_accept: None, is_pending_accept: false, recv_flow: FlowControl { window_size: Window(1048576), available: Window(1048576) }, in_flight_recv_data: 0, next_window_update: None, is_pending_window_update: false, reset_at: None, next_reset_expire: None, pending_recv: Deque { indices: None }, is_recv: false, recv_task: None, push_task: None, pending_push_promises: Queue { indices: None, _p: PhantomData<h2::proto::streams::stream::NextAccept> }, content_length: Omitted }
2025-02-11T04:47:14.061884Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:47:14.062061Z TRACE h2::proto::streams::streams: drop_stream_ref; stream=Stream { id: StreamId(1), state: State { inner: Closed(EndStream) }, is_counted: true, ref_count: 1, next_pending_send: None, is_pending_send: true, send_flow: FlowControl { window_size: Window(65536), available: Window(0) }, requested_send_capacity: 0, buffered_send_data: 0, send_task: Some(Waker { data: 0x26c6caede80, vtable: 0x7ff79efb6be0 }), pending_send: Deque { indices: Some(Indices { head: 0, tail: 0 }) }, next_pending_send_capacity: None, is_pending_send_capacity: false, send_capacity_inc: false, next_open: None, is_pending_open: false, is_pending_push: false, next_pending_accept: None, is_pending_accept: false, recv_flow: FlowControl { window_size: Window(1048576), available: Window(1048576) }, in_flight_recv_data: 0, next_window_update: None, is_pending_window_update: false, reset_at: None, next_reset_expire: None, pending_recv: Deque { indices: None }, is_recv: false, recv_task: None, push_task: None, pending_push_promises: Queue { indices: None, _p: PhantomData<h2::proto::streams::stream::NextAccept> }, content_length: Omitted }
2025-02-11T04:47:14.062172Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:47:14.062328Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T04:47:14.062500Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:47:14.062671Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: poll_complete
2025-02-11T04:47:14.062805Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:47:14.064748Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: is_pending_reset=false
2025-02-11T04:47:14.064974Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: pop_frame; frame=Headers { stream_id: StreamId(1), flags: (0x5: END_HEADERS | END_STREAM) }
2025-02-11T04:47:14.065154Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: Closed(EndStream) }; is_closed=true; pending_send_empty=true; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:47:14.065341Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::counts: dec_num_streams; stream=StreamId(1)
2025-02-11T04:47:14.065520Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: writing frame=Headers { stream_id: StreamId(1), flags: (0x5: END_HEADERS | END_STREAM) }
2025-02-11T04:47:14.065765Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=Headers { stream_id: StreamId(1), flags: (0x5: END_HEADERS | END_STREAM) }}: h2::codec::framed_write: send frame=Headers { stream_id: StreamId(1), flags: (0x5: END_HEADERS | END_STREAM) }
2025-02-11T04:47:14.071332Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:47:14.071630Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: queued_data_frame=false
2025-02-11T04:47:14.071948Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:47:14.072417Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T04:47:14.072612Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:47:14.072807Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=34
2025-02-11T04:47:14.073007Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}: h2::codec::framed_read: decoding frame from 34B
2025-02-11T04:47:14.075729Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}: h2::codec::framed_read: frame.kind=Headers
2025-02-11T04:47:14.076073Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}: h2::frame::headers: loading headers; flags=(0x5: END_HEADERS | END_STREAM)
2025-02-11T04:47:14.076380Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}:hpack::decode: h2::hpack::decoder: decode
2025-02-11T04:47:14.076611Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}:hpack::decode: h2::hpack::decoder: rem=25 kind=Indexed
2025-02-11T04:47:14.076827Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}:hpack::decode: h2::hpack::decoder: rem=24 kind=Indexed
2025-02-11T04:47:14.077013Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}:hpack::decode: h2::hpack::decoder: rem=23 kind=Indexed
2025-02-11T04:47:14.080865Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}:hpack::decode: h2::hpack::decoder: rem=22 kind=LiteralWithoutIndexing
2025-02-11T04:47:14.081197Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}:hpack::decode: h2::hpack::decoder: rem=4 kind=Indexed
2025-02-11T04:47:14.081516Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}:hpack::decode: h2::hpack::decoder: rem=3 kind=Indexed
2025-02-11T04:47:14.081824Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}:hpack::decode: h2::hpack::decoder: rem=2 kind=Indexed
2025-02-11T04:47:14.082054Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}:hpack::decode: h2::hpack::decoder: rem=1 kind=Indexed
2025-02-11T04:47:14.086478Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=Headers { stream_id: StreamId(3), flags: (0x5: END_HEADERS | END_STREAM) }
2025-02-11T04:47:14.086910Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv HEADERS frame=Headers { stream_id: StreamId(3), flags: (0x5: END_HEADERS | END_STREAM) }
2025-02-11T04:47:14.087079Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=1048576; old=0; new=1048576
2025-02-11T04:47:14.087272Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=65536; old=0; new=65536
2025-02-11T04:47:14.087621Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::streams: recv_headers; stream=StreamId(3); state=State { inner: Idle }
2025-02-11T04:47:14.087947Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::recv: opening stream; init_window=1048576
2025-02-11T04:47:14.088241Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::store: Queue::push_back
2025-02-11T04:47:14.088361Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::store:  -> first entry
2025-02-11T04:47:14.091461Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::counts: transition_after; stream=StreamId(3); state=State { inner: HalfClosedRemote(AwaitingHeaders) }; is_closed=false; pending_send_empty=true; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:47:14.091648Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:47:14.091806Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: poll_complete
2025-02-11T04:47:14.091911Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:47:14.092039Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:47:14.092140Z TRACE h2::proto::streams::streams: next_incoming; id=StreamId(3), state=State { inner: HalfClosedRemote(AwaitingHeaders) }
2025-02-11T04:47:14.092207Z TRACE h2::server: received incoming
2025-02-11T04:47:14.092335Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T04:47:14.092482Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:47:14.092619Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: poll_complete
2025-02-11T04:47:14.095450Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:47:14.095641Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:47:14.096143Z TRACE h2::proto::streams::streams: drop_stream_ref; stream=Stream { id: StreamId(3), state: State { inner: HalfClosedRemote(AwaitingHeaders) }, is_counted: true, ref_count: 2, next_pending_send: None, is_pending_send: false, send_flow: FlowControl { window_size: Window(65536), available: Window(0) }, requested_send_capacity: 0, buffered_send_data: 0, send_task: None, pending_send: Deque { indices: None }, next_pending_send_capacity: None, is_pending_send_capacity: false, send_capacity_inc: false, next_open: None, is_pending_open: false, is_pending_push: false, next_pending_accept: None, is_pending_accept: false, recv_flow: FlowControl { window_size: Window(1048576), available: Window(1048576) }, in_flight_recv_data: 0, next_window_update: None, is_pending_window_update: false, reset_at: None, next_reset_expire: None, pending_recv: Deque { indices: None }, is_recv: false, recv_task: None, push_task: None, pending_push_promises: Queue { indices: None, _p: PhantomData<h2::proto::streams::stream::NextAccept> }, content_length: Omitted }
2025-02-11T04:47:14.096417Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(3); state=State { inner: HalfClosedRemote(AwaitingHeaders) }; is_closed=false; pending_send_empty=true; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:47:14.097123Z TRACE h2::proto::streams::send: send_headers; frame=Headers { stream_id: StreamId(3), flags: (0x4: END_HEADERS) }; init_window=65536
2025-02-11T04:47:14.097283Z TRACE Prioritize::queue_frame{stream.id=StreamId(3)}: h2::proto::streams::prioritize: schedule_send stream.id=StreamId(3)
2025-02-11T04:47:14.097410Z TRACE Prioritize::queue_frame{stream.id=StreamId(3)}: h2::proto::streams::store: Queue::push_back
2025-02-11T04:47:14.097723Z TRACE Prioritize::queue_frame{stream.id=StreamId(3)}: h2::proto::streams::store:  -> first entry
2025-02-11T04:47:14.102320Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(3); state=State { inner: HalfClosedRemote(Streaming) }; is_closed=false; pending_send_empty=false; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:47:14.102786Z TRACE reserve_capacity{stream.id=StreamId(3) requested=1 effective=1 curr=0}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::prioritize: requested=1 additional=1 buffered=0 window=65536 conn=1048576000
2025-02-11T04:47:14.103079Z TRACE reserve_capacity{stream.id=StreamId(3) requested=1 effective=1 curr=0}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::prioritize: assigning capacity=1
2025-02-11T04:47:14.103328Z TRACE reserve_capacity{stream.id=StreamId(3) requested=1 effective=1 curr=0}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::stream:   assigned capacity to stream; available=1; buffered=0; id=StreamId(3); max_buffer_size=409600 prev=0
2025-02-11T04:47:14.103583Z TRACE reserve_capacity{stream.id=StreamId(3) requested=1 effective=1 curr=0}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::stream:   notifying task
2025-02-11T04:47:14.103800Z TRACE reserve_capacity{stream.id=StreamId(3) requested=1 effective=1 curr=0}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::prioritize: available=1 requested=1 buffered=0 has_unavailable=true
2025-02-11T04:47:14.104152Z TRACE send_data{sz=23 requested=1}: h2::proto::streams::prioritize: buffered=23
2025-02-11T04:47:14.104875Z TRACE send_data{sz=23 requested=1}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::prioritize: requested=23 additional=22 buffered=23 window=65536 conn=1048575999
2025-02-11T04:47:14.105072Z TRACE send_data{sz=23 requested=1}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::prioritize: assigning capacity=22
2025-02-11T04:47:14.105239Z TRACE send_data{sz=23 requested=1}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::stream:   assigned capacity to stream; available=23; buffered=23; id=StreamId(3); max_buffer_size=409600 prev=0
2025-02-11T04:47:14.105421Z TRACE send_data{sz=23 requested=1}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::prioritize: available=23 requested=23 buffered=23 has_unavailable=true
2025-02-11T04:47:14.105837Z TRACE send_data{sz=23 requested=1}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::store: Queue::push_back
2025-02-11T04:47:14.105993Z TRACE send_data{sz=23 requested=1}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::store:  -> already queued
2025-02-11T04:47:14.106182Z TRACE send_data{sz=23 requested=1}: h2::proto::streams::state: send_close: HalfClosedRemote => Closed
2025-02-11T04:47:14.106338Z TRACE send_data{sz=23 requested=1}: h2::proto::streams::prioritize: available=23 buffered=23
2025-02-11T04:47:14.110197Z TRACE send_data{sz=23 requested=1}:Prioritize::queue_frame{stream.id=StreamId(3)}: h2::proto::streams::prioritize: schedule_send stream.id=StreamId(3)
2025-02-11T04:47:14.110407Z TRACE send_data{sz=23 requested=1}:Prioritize::queue_frame{stream.id=StreamId(3)}: h2::proto::streams::store: Queue::push_back
2025-02-11T04:47:14.110559Z TRACE send_data{sz=23 requested=1}:Prioritize::queue_frame{stream.id=StreamId(3)}: h2::proto::streams::store:  -> already queued
2025-02-11T04:47:14.110724Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(3); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=23; num_recv=1; num_send=0
2025-02-11T04:47:14.110909Z TRACE h2::proto::streams::streams: drop_stream_ref; stream=Stream { id: StreamId(3), state: State { inner: Closed(EndStream) }, is_counted: true, ref_count: 2, next_pending_send: None, is_pending_send: true, send_flow: FlowControl { window_size: Window(65536), available: Window(23) }, requested_send_capacity: 23, buffered_send_data: 23, send_task: Some(Waker { data: 0x26c6cae4580, vtable: 0x7ff79efb6be0 }), pending_send: Deque { indices: Some(Indices { head: 0, tail: 1 }) }, next_pending_send_capacity: None, is_pending_send_capacity: false, send_capacity_inc: true, next_open: None, is_pending_open: false, is_pending_push: false, next_pending_accept: None, is_pending_accept: false, recv_flow: FlowControl { window_size: Window(1048576), available: Window(1048576) }, in_flight_recv_data: 0, next_window_update: None, is_pending_window_update: false, reset_at: None, next_reset_expire: None, pending_recv: Deque { indices: None }, is_recv: false, recv_task: None, push_task: None, pending_push_promises: Queue { indices: None, _p: PhantomData<h2::proto::streams::stream::NextAccept> }, content_length: Omitted }
2025-02-11T04:47:14.111010Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(3); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=23; num_recv=1; num_send=0
2025-02-11T04:47:14.115624Z TRACE h2::proto::streams::streams: drop_stream_ref; stream=Stream { id: StreamId(3), state: State { inner: Closed(EndStream) }, is_counted: true, ref_count: 1, next_pending_send: None, is_pending_send: true, send_flow: FlowControl { window_size: Window(65536), available: Window(23) }, requested_send_capacity: 23, buffered_send_data: 23, send_task: Some(Waker { data: 0x26c6cae4580, vtable: 0x7ff79efb6be0 }), pending_send: Deque { indices: Some(Indices { head: 0, tail: 1 }) }, next_pending_send_capacity: None, is_pending_send_capacity: false, send_capacity_inc: true, next_open: None, is_pending_open: false, is_pending_push: false, next_pending_accept: None, is_pending_accept: false, recv_flow: FlowControl { window_size: Window(1048576), available: Window(1048576) }, in_flight_recv_data: 0, next_window_update: None, is_pending_window_update: false, reset_at: None, next_reset_expire: None, pending_recv: Deque { indices: None }, is_recv: false, recv_task: None, push_task: None, pending_push_promises: Queue { indices: None, _p: PhantomData<h2::proto::streams::stream::NextAccept> }, content_length: Omitted }
2025-02-11T04:47:14.115746Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(3); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=23; num_recv=1; num_send=0
2025-02-11T04:47:14.115931Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T04:47:14.116308Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:47:14.116678Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: poll_complete
2025-02-11T04:47:14.117104Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:47:14.117300Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: is_pending_reset=false
2025-02-11T04:47:14.118484Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: pop_frame; frame=Headers { stream_id: StreamId(3), flags: (0x4: END_HEADERS) }
2025-02-11T04:47:14.118672Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::store: Queue::push_back
2025-02-11T04:47:14.118817Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::store:  -> first entry
2025-02-11T04:47:14.118974Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::counts: transition_after; stream=StreamId(3); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=23; num_recv=1; num_send=0
2025-02-11T04:47:14.119107Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: writing frame=Headers { stream_id: StreamId(3), flags: (0x4: END_HEADERS) }
2025-02-11T04:47:14.119260Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=Headers { stream_id: StreamId(3), flags: (0x4: END_HEADERS) }}: h2::codec::framed_write: send frame=Headers { stream_id: StreamId(3), flags: (0x4: END_HEADERS) }
2025-02-11T04:47:14.122765Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:47:14.122962Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: is_pending_reset=false
2025-02-11T04:47:14.123166Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: data frame sz=23 eos=true window=23 available=23 requested=23 buffered=23
2025-02-11T04:47:14.123354Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: sending data frame len=23
2025-02-11T04:47:14.123540Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}:updating stream flow: h2::proto::streams::flow_control: send_data; sz=23; window=65536; available=23
2025-02-11T04:47:14.126609Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}:updating stream flow: h2::proto::streams::stream:   sent stream data; available=0; buffered=0; id=StreamId(3); max_buffer_size=409600 prev=0
2025-02-11T04:47:14.127132Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}:updating connection flow: h2::proto::streams::flow_control: send_data; sz=23; window=1048576000; available=1048576000
2025-02-11T04:47:14.127331Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: pop_frame; frame=Data { stream_id: StreamId(3), flags: (0x1: END_STREAM) }
2025-02-11T04:47:14.127544Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::counts: transition_after; stream=StreamId(3); state=State { inner: Closed(EndStream) }; is_closed=true; pending_send_empty=true; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:47:14.127740Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::counts: dec_num_streams; stream=StreamId(3)
2025-02-11T04:47:14.127921Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: writing frame=Data { stream_id: StreamId(3), flags: (0x1: END_STREAM) }
2025-02-11T04:47:14.133555Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=Data { stream_id: StreamId(3), flags: (0x1: END_STREAM) }}: h2::codec::framed_write: send frame=Data { stream_id: StreamId(3), flags: (0x1: END_STREAM) }
2025-02-11T04:47:14.133959Z TRACE server_handshake:Connection{peer=Server}:poll:try_reclaim_frame: h2::proto::streams::prioritize: reclaimed frame=Data { stream_id: StreamId(3), flags: (0x1: END_STREAM) } sz=0
2025-02-11T04:47:14.134146Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:47:14.134332Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: queued_data_frame=false
2025-02-11T04:47:14.134612Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:47:14.384930Z DEBUG server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::codec::framed_write: send frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }
2025-02-11T04:47:14.385056Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::frame::settings: encoding SETTINGS; len=24
2025-02-11T04:47:14.385168Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::frame::settings: encoding setting; val=MaxConcurrentStreams(200)
2025-02-11T04:47:14.385330Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::frame::settings: encoding setting; val=InitialWindowSize(1048576)
2025-02-11T04:47:14.385433Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::frame::settings: encoding setting; val=MaxFrameSize(16384)
2025-02-11T04:47:14.385534Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::frame::settings: encoding setting; val=MaxHeaderListSize(16384)
2025-02-11T04:47:14.385637Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::codec::framed_write: encoded settings rem=33
2025-02-11T04:47:14.385759Z TRACE server_handshake: h2::server: state=Flushing(_)
2025-02-11T04:47:14.385879Z TRACE server_handshake:flush:FramedWrite::flush: h2::codec::framed_write: queued_data_frame=false
2025-02-11T04:47:14.386064Z TRACE server_handshake:flush:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:47:14.386176Z TRACE server_handshake: h2::server: flush.poll=Ready
2025-02-11T04:47:14.386294Z TRACE server_handshake: h2::proto::streams::flow_control: inc_window; sz=65535; old=0; new=65535
2025-02-11T04:47:14.386383Z TRACE server_handshake: h2::proto::streams::flow_control: inc_window; sz=65535; old=0; new=65535
2025-02-11T04:47:14.386958Z TRACE server_handshake: h2::proto::streams::prioritize: Prioritize::new; flow=FlowControl { window_size: Window(65535), available: Window(65535) }
2025-02-11T04:47:14.387160Z TRACE server_handshake: h2::server: connection established!
2025-02-11T04:47:14.387345Z TRACE server_handshake: h2::proto::streams::recv: set_target_connection_window; target=1048576; available=65535, reserved=0
2025-02-11T04:47:14.387558Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T04:47:14.387744Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:47:14.387935Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=27
2025-02-11T04:47:14.388120Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=27}: h2::codec::framed_read: decoding frame from 27B
2025-02-11T04:47:14.388279Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=27}: h2::codec::framed_read: frame.kind=Settings
2025-02-11T04:47:14.390202Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=Settings { flags: (0x0), enable_push: 0, max_concurrent_streams: 100, initial_window_size: 65536 }
2025-02-11T04:47:14.390349Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv SETTINGS frame=Settings { flags: (0x0), enable_push: 0, max_concurrent_streams: 100, initial_window_size: 65536 }
2025-02-11T04:47:14.390563Z DEBUG server_handshake:Connection{peer=Server}:poll:poll_ready:FramedWrite::buffer{frame=Settings { flags: (0x1: ACK) }}: h2::codec::framed_write: send frame=Settings { flags: (0x1: ACK) }
2025-02-11T04:47:14.390723Z TRACE server_handshake:Connection{peer=Server}:poll:poll_ready:FramedWrite::buffer{frame=Settings { flags: (0x1: ACK) }}: h2::frame::settings: encoding SETTINGS; len=0
2025-02-11T04:47:14.391055Z TRACE server_handshake:Connection{peer=Server}:poll:poll_ready:FramedWrite::buffer{frame=Settings { flags: (0x1: ACK) }}: h2::codec::framed_write: encoded settings rem=9
2025-02-11T04:47:14.391367Z TRACE server_handshake:Connection{peer=Server}:poll:poll_ready: h2::proto::settings: ACK sent; applying settings
2025-02-11T04:47:14.391678Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:47:14.394161Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=13
2025-02-11T04:47:14.394352Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=13}: h2::codec::framed_read: decoding frame from 13B
2025-02-11T04:47:14.394515Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=13}: h2::codec::framed_read: frame.kind=WindowUpdate
2025-02-11T04:47:14.394668Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=WindowUpdate { stream_id: StreamId(0), size_increment: 1048510465 }
2025-02-11T04:47:14.394802Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv WINDOW_UPDATE frame=WindowUpdate { stream_id: StreamId(0), size_increment: 1048510465 }
2025-02-11T04:47:14.394961Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=1048510465; old=65535; new=1048576000
2025-02-11T04:47:14.395126Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:47:14.399293Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=85
2025-02-11T04:47:14.399763Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}: h2::codec::framed_read: decoding frame from 85B
2025-02-11T04:47:14.400024Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}: h2::codec::framed_read: frame.kind=Headers
2025-02-11T04:47:14.400200Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}: h2::frame::headers: loading headers; flags=(0x4: END_HEADERS)
2025-02-11T04:47:14.400402Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}:hpack::decode: h2::hpack::decoder: decode
2025-02-11T04:47:14.400590Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}:hpack::decode: h2::hpack::decoder: rem=76 kind=LiteralWithIndexing
2025-02-11T04:47:14.403917Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}:hpack::decode: h2::hpack::decoder: rem=67 kind=Indexed
2025-02-11T04:47:14.404146Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}:hpack::decode: h2::hpack::decoder: rem=66 kind=LiteralWithIndexing
2025-02-11T04:47:14.404345Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}:hpack::decode: h2::hpack::decoder: rem=58 kind=LiteralWithoutIndexing
2025-02-11T04:47:14.404538Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}:hpack::decode: h2::hpack::decoder: rem=44 kind=LiteralWithIndexing
2025-02-11T04:47:14.404747Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}:hpack::decode: h2::hpack::decoder: rem=27 kind=LiteralWithIndexing
2025-02-11T04:47:14.408774Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}:hpack::decode: h2::hpack::decoder: rem=22 kind=LiteralWithIndexing
2025-02-11T04:47:14.409105Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}:hpack::decode: h2::hpack::decoder: rem=14 kind=LiteralWithIndexing
2025-02-11T04:47:14.409310Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}:hpack::decode: h2::hpack::decoder: rem=6 kind=LiteralWithoutIndexing
2025-02-11T04:47:14.409500Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=Headers { stream_id: StreamId(1), flags: (0x4: END_HEADERS) }
2025-02-11T04:47:14.409653Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv HEADERS frame=Headers { stream_id: StreamId(1), flags: (0x4: END_HEADERS) }
2025-02-11T04:47:14.409788Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=65535; old=0; new=65535
2025-02-11T04:47:14.409906Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=65536; old=0; new=65536
2025-02-11T04:47:14.415335Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::streams: recv_headers; stream=StreamId(1); state=State { inner: Idle }
2025-02-11T04:47:14.415624Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::recv: opening stream; init_window=65535
2025-02-11T04:47:14.415873Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::store: Queue::push_back
2025-02-11T04:47:14.416082Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::store:  -> first entry
2025-02-11T04:47:14.416333Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: Open { local: AwaitingHeaders, remote: Streaming } }; is_closed=false; pending_send_empty=true; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:47:14.416610Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:47:14.416792Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=172
2025-02-11T04:47:14.416978Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=172}: h2::codec::framed_read: decoding frame from 172B
2025-02-11T04:47:14.419998Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=172}: h2::codec::framed_read: frame.kind=Data
2025-02-11T04:47:14.420271Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=Data { stream_id: StreamId(1), flags: (0x1: END_STREAM) }
2025-02-11T04:47:14.420497Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv DATA frame=Data { stream_id: StreamId(1), flags: (0x1: END_STREAM) }
2025-02-11T04:47:14.420696Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::recv: recv_data; size=163; connection=65535; stream=65535
2025-02-11T04:47:14.420917Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: send_data; sz=163; window=65535; available=1048576
2025-02-11T04:47:14.421117Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::state: recv_close: Open => HalfClosedRemote(AwaitingHeaders)
2025-02-11T04:47:14.421290Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: send_data; sz=163; window=65535; available=65535
2025-02-11T04:47:14.424044Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: HalfClosedRemote(AwaitingHeaders) }; is_closed=false; pending_send_empty=true; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:47:14.424242Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:47:14.424478Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=9
2025-02-11T04:47:14.424636Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=9}: h2::codec::framed_read: decoding frame from 9B
2025-02-11T04:47:14.424850Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=9}: h2::codec::framed_read: frame.kind=Settings
2025-02-11T04:47:14.424987Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=Settings { flags: (0x1: ACK) }
2025-02-11T04:47:14.425110Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv SETTINGS frame=Settings { flags: (0x1: ACK) }
2025-02-11T04:47:14.427699Z DEBUG server_handshake:Connection{peer=Server}:poll: h2::proto::settings: received settings ACK; applying Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }
2025-02-11T04:47:14.427916Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::recv: update_initial_window_size; new=1048576; old=65535
2025-02-11T04:47:14.428204Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::recv: incrementing all windows; inc=983041
2025-02-11T04:47:14.428460Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=983041; old=65372; new=1048413
2025-02-11T04:47:14.428603Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:47:14.428841Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=WindowUpdate { stream_id: StreamId(0), size_increment: 983041 }}: h2::codec::framed_write: send frame=WindowUpdate { stream_id: StreamId(0), size_increment: 983041 }
2025-02-11T04:47:14.428978Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=WindowUpdate { stream_id: StreamId(0), size_increment: 983041 }}: h2::frame::window_update: encoding WINDOW_UPDATE; id=StreamId(0)
2025-02-11T04:47:14.432409Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=WindowUpdate { stream_id: StreamId(0), size_increment: 983041 }}: h2::codec::framed_write: encoded window_update rem=22
2025-02-11T04:47:14.432661Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=983041; old=65372; new=1048413
2025-02-11T04:47:14.432867Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: poll_complete
2025-02-11T04:47:14.432993Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:47:14.433174Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: queued_data_frame=false
2025-02-11T04:47:14.433419Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:47:14.433557Z TRACE h2::proto::streams::streams: next_incoming; id=StreamId(1), state=State { inner: HalfClosedRemote(AwaitingHeaders) }
2025-02-11T04:47:14.433669Z TRACE h2::server: received incoming
2025-02-11T04:47:14.433860Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T04:47:14.434015Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:47:14.437115Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: poll_complete
2025-02-11T04:47:14.437377Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:47:14.437609Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:47:14.437908Z TRACE h2::proto::streams::streams: drop_stream_ref; stream=Stream { id: StreamId(1), state: State { inner: HalfClosedRemote(AwaitingHeaders) }, is_counted: true, ref_count: 2, next_pending_send: None, is_pending_send: false, send_flow: FlowControl { window_size: Window(65536), available: Window(0) }, requested_send_capacity: 0, buffered_send_data: 0, send_task: None, pending_send: Deque { indices: None }, next_pending_send_capacity: None, is_pending_send_capacity: false, send_capacity_inc: false, next_open: None, is_pending_open: false, is_pending_push: false, next_pending_accept: None, is_pending_accept: false, recv_flow: FlowControl { window_size: Window(1048413), available: Window(1048413) }, in_flight_recv_data: 163, next_window_update: None, is_pending_window_update: false, reset_at: None, next_reset_expire: None, pending_recv: Deque { indices: None }, is_recv: false, recv_task: None, push_task: None, pending_push_promises: Queue { indices: None, _p: PhantomData<h2::proto::streams::stream::NextAccept> }, content_length: Remaining(0) }
2025-02-11T04:47:14.438027Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: HalfClosedRemote(AwaitingHeaders) }; is_closed=false; pending_send_empty=true; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:47:14.438145Z  INFO hydroxide::server: PROPFIND request
2025-02-11T04:47:14.438320Z TRACE h2::proto::streams::send: send_headers; frame=Headers { stream_id: StreamId(1), flags: (0x4: END_HEADERS) }; init_window=65536
2025-02-11T04:47:14.438477Z TRACE Prioritize::queue_frame{stream.id=StreamId(1)}: h2::proto::streams::prioritize: schedule_send stream.id=StreamId(1)
2025-02-11T04:47:14.444006Z TRACE Prioritize::queue_frame{stream.id=StreamId(1)}: h2::proto::streams::store: Queue::push_back
2025-02-11T04:47:14.444193Z TRACE Prioritize::queue_frame{stream.id=StreamId(1)}: h2::proto::streams::store:  -> first entry
2025-02-11T04:47:14.444311Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: HalfClosedRemote(Streaming) }; is_closed=false; pending_send_empty=false; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:47:14.444481Z TRACE reserve_capacity{stream.id=StreamId(1) requested=1 effective=1 curr=0}:try_assign_capacity{stream.id=StreamId(1)}: h2::proto::streams::prioritize: requested=1 additional=1 buffered=0 window=65536 conn=1048576000
2025-02-11T04:47:14.444605Z TRACE reserve_capacity{stream.id=StreamId(1) requested=1 effective=1 curr=0}:try_assign_capacity{stream.id=StreamId(1)}: h2::proto::streams::prioritize: assigning capacity=1
2025-02-11T04:47:14.444715Z TRACE reserve_capacity{stream.id=StreamId(1) requested=1 effective=1 curr=0}:try_assign_capacity{stream.id=StreamId(1)}: h2::proto::streams::stream:   assigned capacity to stream; available=1; buffered=0; id=StreamId(1); max_buffer_size=409600 prev=0
2025-02-11T04:47:14.444822Z TRACE reserve_capacity{stream.id=StreamId(1) requested=1 effective=1 curr=0}:try_assign_capacity{stream.id=StreamId(1)}: h2::proto::streams::stream:   notifying task
2025-02-11T04:47:14.444938Z TRACE reserve_capacity{stream.id=StreamId(1) requested=1 effective=1 curr=0}:try_assign_capacity{stream.id=StreamId(1)}: h2::proto::streams::prioritize: available=1 requested=1 buffered=0 has_unavailable=true
2025-02-11T04:47:14.446905Z TRACE send_data{sz=80 requested=1}: h2::proto::streams::prioritize: buffered=80
2025-02-11T04:47:14.447086Z TRACE send_data{sz=80 requested=1}:try_assign_capacity{stream.id=StreamId(1)}: h2::proto::streams::prioritize: requested=80 additional=79 buffered=80 window=65536 conn=1048575999
2025-02-11T04:47:14.447209Z TRACE send_data{sz=80 requested=1}:try_assign_capacity{stream.id=StreamId(1)}: h2::proto::streams::prioritize: assigning capacity=79
2025-02-11T04:47:14.447309Z TRACE send_data{sz=80 requested=1}:try_assign_capacity{stream.id=StreamId(1)}: h2::proto::streams::stream:   assigned capacity to stream; available=80; buffered=80; id=StreamId(1); max_buffer_size=409600 prev=0
2025-02-11T04:47:14.447572Z TRACE send_data{sz=80 requested=1}:try_assign_capacity{stream.id=StreamId(1)}: h2::proto::streams::prioritize: available=80 requested=80 buffered=80 has_unavailable=true
2025-02-11T04:47:14.447863Z TRACE send_data{sz=80 requested=1}:try_assign_capacity{stream.id=StreamId(1)}: h2::proto::streams::store: Queue::push_back
2025-02-11T04:47:14.448004Z TRACE send_data{sz=80 requested=1}:try_assign_capacity{stream.id=StreamId(1)}: h2::proto::streams::store:  -> already queued
2025-02-11T04:47:14.448229Z TRACE send_data{sz=80 requested=1}: h2::proto::streams::state: send_close: HalfClosedRemote => Closed
2025-02-11T04:47:14.450651Z TRACE send_data{sz=80 requested=1}: h2::proto::streams::prioritize: available=80 buffered=80
2025-02-11T04:47:14.450967Z TRACE send_data{sz=80 requested=1}:Prioritize::queue_frame{stream.id=StreamId(1)}: h2::proto::streams::prioritize: schedule_send stream.id=StreamId(1)
2025-02-11T04:47:14.451250Z TRACE send_data{sz=80 requested=1}:Prioritize::queue_frame{stream.id=StreamId(1)}: h2::proto::streams::store: Queue::push_back
2025-02-11T04:47:14.451469Z TRACE send_data{sz=80 requested=1}:Prioritize::queue_frame{stream.id=StreamId(1)}: h2::proto::streams::store:  -> already queued
2025-02-11T04:47:14.451600Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=80; num_recv=1; num_send=0
2025-02-11T04:47:14.451740Z TRACE h2::proto::streams::streams: drop_stream_ref; stream=Stream { id: StreamId(1), state: State { inner: Closed(EndStream) }, is_counted: true, ref_count: 2, next_pending_send: None, is_pending_send: true, send_flow: FlowControl { window_size: Window(65536), available: Window(80) }, requested_send_capacity: 80, buffered_send_data: 80, send_task: Some(Waker { data: 0x26c6cafd400, vtable: 0x7ff79efb6be0 }), pending_send: Deque { indices: Some(Indices { head: 0, tail: 1 }) }, next_pending_send_capacity: None, is_pending_send_capacity: false, send_capacity_inc: true, next_open: None, is_pending_open: false, is_pending_push: false, next_pending_accept: None, is_pending_accept: false, recv_flow: FlowControl { window_size: Window(1048413), available: Window(1048413) }, in_flight_recv_data: 163, next_window_update: None, is_pending_window_update: false, reset_at: None, next_reset_expire: None, pending_recv: Deque { indices: None }, is_recv: false, recv_task: None, push_task: None, pending_push_promises: Queue { indices: None, _p: PhantomData<h2::proto::streams::stream::NextAccept> }, content_length: Remaining(0) }
2025-02-11T04:47:14.451843Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=80; num_recv=1; num_send=0
2025-02-11T04:47:14.455445Z TRACE h2::proto::streams::streams: drop_stream_ref; stream=Stream { id: StreamId(1), state: State { inner: Closed(EndStream) }, is_counted: true, ref_count: 1, next_pending_send: None, is_pending_send: true, send_flow: FlowControl { window_size: Window(65536), available: Window(80) }, requested_send_capacity: 80, buffered_send_data: 80, send_task: Some(Waker { data: 0x26c6cafd400, vtable: 0x7ff79efb6be0 }), pending_send: Deque { indices: Some(Indices { head: 0, tail: 1 }) }, next_pending_send_capacity: None, is_pending_send_capacity: false, send_capacity_inc: true, next_open: None, is_pending_open: false, is_pending_push: false, next_pending_accept: None, is_pending_accept: false, recv_flow: FlowControl { window_size: Window(1048413), available: Window(1048413) }, in_flight_recv_data: 163, next_window_update: None, is_pending_window_update: false, reset_at: None, next_reset_expire: None, pending_recv: Deque { indices: None }, is_recv: false, recv_task: None, push_task: None, pending_push_promises: Queue { indices: None, _p: PhantomData<h2::proto::streams::stream::NextAccept> }, content_length: Remaining(0) }
2025-02-11T04:47:14.455593Z TRACE h2::proto::streams::recv: auto-release closed stream (StreamId(1)) capacity: 163
2025-02-11T04:47:14.455748Z TRACE h2::proto::streams::recv: release_connection_capacity; size=163, connection in_flight_data=163
2025-02-11T04:47:14.455869Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=80; num_recv=1; num_send=0
2025-02-11T04:47:14.456068Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T04:47:14.456248Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:47:14.456429Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: poll_complete
2025-02-11T04:47:14.456573Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:47:14.457956Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: is_pending_reset=false
2025-02-11T04:47:14.458155Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: pop_frame; frame=Headers { stream_id: StreamId(1), flags: (0x4: END_HEADERS) }
2025-02-11T04:47:14.458314Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::store: Queue::push_back
2025-02-11T04:47:14.458478Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::store:  -> first entry
2025-02-11T04:47:14.458639Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=80; num_recv=1; num_send=0
2025-02-11T04:47:14.458788Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: writing frame=Headers { stream_id: StreamId(1), flags: (0x4: END_HEADERS) }
2025-02-11T04:47:14.461491Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=Headers { stream_id: StreamId(1), flags: (0x4: END_HEADERS) }}: h2::codec::framed_write: send frame=Headers { stream_id: StreamId(1), flags: (0x4: END_HEADERS) }
2025-02-11T04:47:14.461844Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:47:14.462232Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: is_pending_reset=false
2025-02-11T04:47:14.462589Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: data frame sz=80 eos=true window=80 available=80 requested=80 buffered=80
2025-02-11T04:47:14.462754Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: sending data frame len=80
2025-02-11T04:47:14.465650Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}:updating stream flow: h2::proto::streams::flow_control: send_data; sz=80; window=65536; available=80
2025-02-11T04:47:14.465993Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}:updating stream flow: h2::proto::streams::stream:   sent stream data; available=0; buffered=0; id=StreamId(1); max_buffer_size=409600 prev=0
2025-02-11T04:47:14.466251Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}:updating connection flow: h2::proto::streams::flow_control: send_data; sz=80; window=1048576000; available=1048576000
2025-02-11T04:47:14.466448Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: pop_frame; frame=Data { stream_id: StreamId(1), flags: (0x1: END_STREAM) }
2025-02-11T04:47:14.466642Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: Closed(EndStream) }; is_closed=true; pending_send_empty=true; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:47:14.473362Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::counts: dec_num_streams; stream=StreamId(1)
2025-02-11T04:47:14.473640Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: writing frame=Data { stream_id: StreamId(1), flags: (0x1: END_STREAM) }
2025-02-11T04:47:14.473838Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=Data { stream_id: StreamId(1), flags: (0x1: END_STREAM) }}: h2::codec::framed_write: send frame=Data { stream_id: StreamId(1), flags: (0x1: END_STREAM) }
2025-02-11T04:47:14.474047Z TRACE server_handshake:Connection{peer=Server}:poll:try_reclaim_frame: h2::proto::streams::prioritize: reclaimed frame=Data { stream_id: StreamId(1), flags: (0x1: END_STREAM) } sz=0
2025-02-11T04:47:14.474249Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:47:14.474413Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: queued_data_frame=false
2025-02-11T04:47:14.474660Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:47:14.477640Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T04:47:14.477949Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:47:14.478252Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=26
2025-02-11T04:47:14.478557Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=26}: h2::codec::framed_read: decoding frame from 26B
2025-02-11T04:47:14.478766Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=26}: h2::codec::framed_read: frame.kind=GoAway
2025-02-11T04:47:14.478995Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=GoAway { error_code: NO_ERROR, last_stream_id: StreamId(0), debug_data: b"shutdown\0" }
2025-02-11T04:47:14.479176Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv GOAWAY frame=GoAway { error_code: NO_ERROR, last_stream_id: StreamId(0), debug_data: b"shutdown\0" }
2025-02-11T04:47:14.482282Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:47:14.482477Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: codec closed
2025-02-11T04:47:14.482655Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::streams: Streams::recv_eof
2025-02-11T04:47:14.482899Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Closing(NO_ERROR, Library)
2025-02-11T04:47:14.483102Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection closing after flush
2025-02-11T04:47:14.483319Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:47:14.483937Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Closed(NO_ERROR, Library)
2025-02-11T04:47:14.484117Z TRACE h2::proto::streams::streams: Streams::recv_eof
2025-02-11T04:47:14.484609Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T04:47:14.488743Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:47:14.489109Z DEBUG server_handshake:Connection{peer=Server}:poll: h2::proto::connection: Connection::poll; IO error error=ConnectionReset
2025-02-11T04:47:14.489278Z TRACE h2::proto::streams::streams: Streams::recv_eof
2025-02-11T04:48:17.824885Z DEBUG server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::codec::framed_write: send frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }
2025-02-11T04:48:17.825013Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::frame::settings: encoding SETTINGS; len=24
2025-02-11T04:48:17.825130Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::frame::settings: encoding setting; val=MaxConcurrentStreams(200)
2025-02-11T04:48:17.825223Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::frame::settings: encoding setting; val=InitialWindowSize(1048576)
2025-02-11T04:48:17.825362Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::frame::settings: encoding setting; val=MaxFrameSize(16384)
2025-02-11T04:48:17.825468Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::frame::settings: encoding setting; val=MaxHeaderListSize(16384)
2025-02-11T04:48:17.825587Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::codec::framed_write: encoded settings rem=33
2025-02-11T04:48:17.825713Z TRACE server_handshake: h2::server: state=Flushing(_)
2025-02-11T04:48:17.825834Z TRACE server_handshake:flush:FramedWrite::flush: h2::codec::framed_write: queued_data_frame=false
2025-02-11T04:48:17.826004Z TRACE server_handshake:flush:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:48:17.826111Z TRACE server_handshake: h2::server: flush.poll=Ready
2025-02-11T04:48:17.826220Z TRACE server_handshake: h2::proto::streams::flow_control: inc_window; sz=65535; old=0; new=65535
2025-02-11T04:48:17.826317Z TRACE server_handshake: h2::proto::streams::flow_control: inc_window; sz=65535; old=0; new=65535
2025-02-11T04:48:17.826417Z TRACE server_handshake: h2::proto::streams::prioritize: Prioritize::new; flow=FlowControl { window_size: Window(65535), available: Window(65535) }
2025-02-11T04:48:17.826516Z TRACE server_handshake: h2::server: connection established!
2025-02-11T04:48:17.826602Z TRACE server_handshake: h2::proto::streams::recv: set_target_connection_window; target=1048576; available=65535, reserved=0
2025-02-11T04:48:17.826716Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T04:48:17.826844Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:17.827100Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=27
2025-02-11T04:48:17.827412Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=27}: h2::codec::framed_read: decoding frame from 27B
2025-02-11T04:48:17.829257Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=27}: h2::codec::framed_read: frame.kind=Settings
2025-02-11T04:48:17.829778Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=Settings { flags: (0x0), enable_push: 0, max_concurrent_streams: 100, initial_window_size: 65536 }
2025-02-11T04:48:17.830199Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv SETTINGS frame=Settings { flags: (0x0), enable_push: 0, max_concurrent_streams: 100, initial_window_size: 65536 }
2025-02-11T04:48:17.830547Z DEBUG server_handshake:Connection{peer=Server}:poll:poll_ready:FramedWrite::buffer{frame=Settings { flags: (0x1: ACK) }}: h2::codec::framed_write: send frame=Settings { flags: (0x1: ACK) }
2025-02-11T04:48:17.830705Z TRACE server_handshake:Connection{peer=Server}:poll:poll_ready:FramedWrite::buffer{frame=Settings { flags: (0x1: ACK) }}: h2::frame::settings: encoding SETTINGS; len=0
2025-02-11T04:48:17.831009Z TRACE server_handshake:Connection{peer=Server}:poll:poll_ready:FramedWrite::buffer{frame=Settings { flags: (0x1: ACK) }}: h2::codec::framed_write: encoded settings rem=9
2025-02-11T04:48:17.832809Z TRACE server_handshake:Connection{peer=Server}:poll:poll_ready: h2::proto::settings: ACK sent; applying settings
2025-02-11T04:48:17.833008Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:17.833147Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=13
2025-02-11T04:48:17.833304Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=13}: h2::codec::framed_read: decoding frame from 13B
2025-02-11T04:48:17.833451Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=13}: h2::codec::framed_read: frame.kind=WindowUpdate
2025-02-11T04:48:17.833679Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=WindowUpdate { stream_id: StreamId(0), size_increment: 1048510465 }
2025-02-11T04:48:17.833850Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv WINDOW_UPDATE frame=WindowUpdate { stream_id: StreamId(0), size_increment: 1048510465 }
2025-02-11T04:48:17.836973Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=1048510465; old=65535; new=1048576000
2025-02-11T04:48:17.837292Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:17.837644Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=114
2025-02-11T04:48:17.838034Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}: h2::codec::framed_read: decoding frame from 114B
2025-02-11T04:48:17.838327Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}: h2::codec::framed_read: frame.kind=Headers
2025-02-11T04:48:17.838481Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}: h2::frame::headers: loading headers; flags=(0x5: END_HEADERS | END_STREAM)
2025-02-11T04:48:17.838674Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}:hpack::decode: h2::hpack::decoder: decode
2025-02-11T04:48:17.840652Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}:hpack::decode: h2::hpack::decoder: rem=105 kind=Indexed
2025-02-11T04:48:17.840905Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}:hpack::decode: h2::hpack::decoder: rem=104 kind=Indexed
2025-02-11T04:48:17.841129Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}:hpack::decode: h2::hpack::decoder: rem=103 kind=LiteralWithIndexing
2025-02-11T04:48:17.841385Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}:hpack::decode: h2::hpack::decoder: rem=95 kind=LiteralWithoutIndexing
2025-02-11T04:48:17.841707Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}:hpack::decode: h2::hpack::decoder: rem=56 kind=LiteralWithIndexing
2025-02-11T04:48:17.844575Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}:hpack::decode: h2::hpack::decoder: rem=39 kind=LiteralWithIndexing
2025-02-11T04:48:17.844820Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}:hpack::decode: h2::hpack::decoder: rem=34 kind=LiteralWithIndexing
2025-02-11T04:48:17.845100Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}:hpack::decode: h2::hpack::decoder: rem=14 kind=LiteralWithIndexing
2025-02-11T04:48:17.845297Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=Headers { stream_id: StreamId(1), flags: (0x5: END_HEADERS | END_STREAM) }
2025-02-11T04:48:17.845425Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv HEADERS frame=Headers { stream_id: StreamId(1), flags: (0x5: END_HEADERS | END_STREAM) }
2025-02-11T04:48:17.845611Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=65535; old=0; new=65535
2025-02-11T04:48:17.845741Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=65536; old=0; new=65536
2025-02-11T04:48:17.849135Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::streams: recv_headers; stream=StreamId(1); state=State { inner: Idle }
2025-02-11T04:48:17.849355Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::recv: opening stream; init_window=65535
2025-02-11T04:48:17.849562Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::store: Queue::push_back
2025-02-11T04:48:17.849732Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::store:  -> first entry
2025-02-11T04:48:17.849928Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: HalfClosedRemote(AwaitingHeaders) }; is_closed=false; pending_send_empty=true; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:48:17.850416Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:17.850643Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=9
2025-02-11T04:48:17.850848Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=9}: h2::codec::framed_read: decoding frame from 9B
2025-02-11T04:48:17.855747Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=9}: h2::codec::framed_read: frame.kind=Settings
2025-02-11T04:48:17.855960Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=Settings { flags: (0x1: ACK) }
2025-02-11T04:48:17.856092Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv SETTINGS frame=Settings { flags: (0x1: ACK) }
2025-02-11T04:48:17.856232Z DEBUG server_handshake:Connection{peer=Server}:poll: h2::proto::settings: received settings ACK; applying Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }
2025-02-11T04:48:17.856355Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::recv: update_initial_window_size; new=1048576; old=65535
2025-02-11T04:48:17.856472Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::recv: incrementing all windows; inc=983041
2025-02-11T04:48:17.856591Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=983041; old=65535; new=1048576
2025-02-11T04:48:17.860326Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:17.860731Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=WindowUpdate { stream_id: StreamId(0), size_increment: 983041 }}: h2::codec::framed_write: send frame=WindowUpdate { stream_id: StreamId(0), size_increment: 983041 }
2025-02-11T04:48:17.860948Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=WindowUpdate { stream_id: StreamId(0), size_increment: 983041 }}: h2::frame::window_update: encoding WINDOW_UPDATE; id=StreamId(0)
2025-02-11T04:48:17.861178Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=WindowUpdate { stream_id: StreamId(0), size_increment: 983041 }}: h2::codec::framed_write: encoded window_update rem=22
2025-02-11T04:48:17.861370Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=983041; old=65535; new=1048576
2025-02-11T04:48:17.861679Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: poll_complete
2025-02-11T04:48:17.861942Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:48:17.867761Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: queued_data_frame=false
2025-02-11T04:48:17.868217Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:48:17.868467Z TRACE h2::proto::streams::streams: next_incoming; id=StreamId(1), state=State { inner: HalfClosedRemote(AwaitingHeaders) }
2025-02-11T04:48:17.868602Z TRACE h2::server: received incoming
2025-02-11T04:48:17.868842Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T04:48:17.869094Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:17.869470Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: poll_complete
2025-02-11T04:48:17.869776Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:48:17.870124Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:48:17.874202Z TRACE h2::proto::streams::streams: drop_stream_ref; stream=Stream { id: StreamId(1), state: State { inner: HalfClosedRemote(AwaitingHeaders) }, is_counted: true, ref_count: 2, next_pending_send: None, is_pending_send: false, send_flow: FlowControl { window_size: Window(65536), available: Window(0) }, requested_send_capacity: 0, buffered_send_data: 0, send_task: None, pending_send: Deque { indices: None }, next_pending_send_capacity: None, is_pending_send_capacity: false, send_capacity_inc: false, next_open: None, is_pending_open: false, is_pending_push: false, next_pending_accept: None, is_pending_accept: false, recv_flow: FlowControl { window_size: Window(1048576), available: Window(1048576) }, in_flight_recv_data: 0, next_window_update: None, is_pending_window_update: false, reset_at: None, next_reset_expire: None, pending_recv: Deque { indices: None }, is_recv: false, recv_task: None, push_task: None, pending_push_promises: Queue { indices: None, _p: PhantomData<h2::proto::streams::stream::NextAccept> }, content_length: Omitted }
2025-02-11T04:48:17.874495Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: HalfClosedRemote(AwaitingHeaders) }; is_closed=false; pending_send_empty=true; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:48:17.875377Z TRACE h2::proto::streams::send: send_headers; frame=Headers { stream_id: StreamId(1), flags: (0x5: END_HEADERS | END_STREAM) }; init_window=65536
2025-02-11T04:48:17.875581Z TRACE Prioritize::queue_frame{stream.id=StreamId(1)}: h2::proto::streams::prioritize: schedule_send stream.id=StreamId(1)
2025-02-11T04:48:17.875787Z TRACE Prioritize::queue_frame{stream.id=StreamId(1)}: h2::proto::streams::store: Queue::push_back
2025-02-11T04:48:17.875960Z TRACE Prioritize::queue_frame{stream.id=StreamId(1)}: h2::proto::streams::store:  -> first entry
2025-02-11T04:48:17.876190Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:48:17.880431Z TRACE h2::proto::streams::streams: drop_stream_ref; stream=Stream { id: StreamId(1), state: State { inner: Closed(EndStream) }, is_counted: true, ref_count: 2, next_pending_send: None, is_pending_send: true, send_flow: FlowControl { window_size: Window(65536), available: Window(0) }, requested_send_capacity: 0, buffered_send_data: 0, send_task: Some(Waker { data: 0x26c6cae3f00, vtable: 0x7ff79efb6be0 }), pending_send: Deque { indices: Some(Indices { head: 0, tail: 0 }) }, next_pending_send_capacity: None, is_pending_send_capacity: false, send_capacity_inc: false, next_open: None, is_pending_open: false, is_pending_push: false, next_pending_accept: None, is_pending_accept: false, recv_flow: FlowControl { window_size: Window(1048576), available: Window(1048576) }, in_flight_recv_data: 0, next_window_update: None, is_pending_window_update: false, reset_at: None, next_reset_expire: None, pending_recv: Deque { indices: None }, is_recv: false, recv_task: None, push_task: None, pending_push_promises: Queue { indices: None, _p: PhantomData<h2::proto::streams::stream::NextAccept> }, content_length: Omitted }
2025-02-11T04:48:17.880732Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:48:17.880993Z TRACE h2::proto::streams::streams: drop_stream_ref; stream=Stream { id: StreamId(1), state: State { inner: Closed(EndStream) }, is_counted: true, ref_count: 1, next_pending_send: None, is_pending_send: true, send_flow: FlowControl { window_size: Window(65536), available: Window(0) }, requested_send_capacity: 0, buffered_send_data: 0, send_task: Some(Waker { data: 0x26c6cae3f00, vtable: 0x7ff79efb6be0 }), pending_send: Deque { indices: Some(Indices { head: 0, tail: 0 }) }, next_pending_send_capacity: None, is_pending_send_capacity: false, send_capacity_inc: false, next_open: None, is_pending_open: false, is_pending_push: false, next_pending_accept: None, is_pending_accept: false, recv_flow: FlowControl { window_size: Window(1048576), available: Window(1048576) }, in_flight_recv_data: 0, next_window_update: None, is_pending_window_update: false, reset_at: None, next_reset_expire: None, pending_recv: Deque { indices: None }, is_recv: false, recv_task: None, push_task: None, pending_push_promises: Queue { indices: None, _p: PhantomData<h2::proto::streams::stream::NextAccept> }, content_length: Omitted }
2025-02-11T04:48:17.881136Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:48:17.881458Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T04:48:17.881814Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:17.882160Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: poll_complete
2025-02-11T04:48:17.882372Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:48:17.898347Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: is_pending_reset=false
2025-02-11T04:48:17.899009Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: pop_frame; frame=Headers { stream_id: StreamId(1), flags: (0x5: END_HEADERS | END_STREAM) }
2025-02-11T04:48:17.899492Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: Closed(EndStream) }; is_closed=true; pending_send_empty=true; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:48:17.899919Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::counts: dec_num_streams; stream=StreamId(1)
2025-02-11T04:48:17.900329Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: writing frame=Headers { stream_id: StreamId(1), flags: (0x5: END_HEADERS | END_STREAM) }
2025-02-11T04:48:17.904090Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=Headers { stream_id: StreamId(1), flags: (0x5: END_HEADERS | END_STREAM) }}: h2::codec::framed_write: send frame=Headers { stream_id: StreamId(1), flags: (0x5: END_HEADERS | END_STREAM) }
2025-02-11T04:48:17.904357Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:48:17.904541Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: queued_data_frame=false
2025-02-11T04:48:17.904815Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:48:17.905298Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T04:48:17.905576Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:17.905895Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=34
2025-02-11T04:48:17.906208Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}: h2::codec::framed_read: decoding frame from 34B
2025-02-11T04:48:17.911402Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}: h2::codec::framed_read: frame.kind=Headers
2025-02-11T04:48:17.911745Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}: h2::frame::headers: loading headers; flags=(0x5: END_HEADERS | END_STREAM)
2025-02-11T04:48:17.912055Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}:hpack::decode: h2::hpack::decoder: decode
2025-02-11T04:48:17.912297Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}:hpack::decode: h2::hpack::decoder: rem=25 kind=Indexed
2025-02-11T04:48:17.912501Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}:hpack::decode: h2::hpack::decoder: rem=24 kind=Indexed
2025-02-11T04:48:17.931487Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}:hpack::decode: h2::hpack::decoder: rem=23 kind=Indexed
2025-02-11T04:48:17.931775Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}:hpack::decode: h2::hpack::decoder: rem=22 kind=LiteralWithoutIndexing
2025-02-11T04:48:17.932085Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}:hpack::decode: h2::hpack::decoder: rem=4 kind=Indexed
2025-02-11T04:48:17.932298Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}:hpack::decode: h2::hpack::decoder: rem=3 kind=Indexed
2025-02-11T04:48:17.932489Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}:hpack::decode: h2::hpack::decoder: rem=2 kind=Indexed
2025-02-11T04:48:17.932690Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}:hpack::decode: h2::hpack::decoder: rem=1 kind=Indexed
2025-02-11T04:48:17.936772Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=Headers { stream_id: StreamId(3), flags: (0x5: END_HEADERS | END_STREAM) }
2025-02-11T04:48:17.936975Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv HEADERS frame=Headers { stream_id: StreamId(3), flags: (0x5: END_HEADERS | END_STREAM) }
2025-02-11T04:48:17.937119Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=1048576; old=0; new=1048576
2025-02-11T04:48:17.937262Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=65536; old=0; new=65536
2025-02-11T04:48:17.937432Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::streams: recv_headers; stream=StreamId(3); state=State { inner: Idle }
2025-02-11T04:48:17.937572Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::recv: opening stream; init_window=1048576
2025-02-11T04:48:17.937750Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::store: Queue::push_back
2025-02-11T04:48:17.937920Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::store:  -> first entry
2025-02-11T04:48:17.944392Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::counts: transition_after; stream=StreamId(3); state=State { inner: HalfClosedRemote(AwaitingHeaders) }; is_closed=false; pending_send_empty=true; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:48:17.944777Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:17.945086Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: poll_complete
2025-02-11T04:48:17.945285Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:48:17.945525Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:48:17.945706Z TRACE h2::proto::streams::streams: next_incoming; id=StreamId(3), state=State { inner: HalfClosedRemote(AwaitingHeaders) }
2025-02-11T04:48:17.945832Z TRACE h2::server: received incoming
2025-02-11T04:48:17.946073Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T04:48:17.946332Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:17.962156Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: poll_complete
2025-02-11T04:48:17.962342Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:48:17.962500Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:48:17.962756Z TRACE h2::proto::streams::streams: drop_stream_ref; stream=Stream { id: StreamId(3), state: State { inner: HalfClosedRemote(AwaitingHeaders) }, is_counted: true, ref_count: 2, next_pending_send: None, is_pending_send: false, send_flow: FlowControl { window_size: Window(65536), available: Window(0) }, requested_send_capacity: 0, buffered_send_data: 0, send_task: None, pending_send: Deque { indices: None }, next_pending_send_capacity: None, is_pending_send_capacity: false, send_capacity_inc: false, next_open: None, is_pending_open: false, is_pending_push: false, next_pending_accept: None, is_pending_accept: false, recv_flow: FlowControl { window_size: Window(1048576), available: Window(1048576) }, in_flight_recv_data: 0, next_window_update: None, is_pending_window_update: false, reset_at: None, next_reset_expire: None, pending_recv: Deque { indices: None }, is_recv: false, recv_task: None, push_task: None, pending_push_promises: Queue { indices: None, _p: PhantomData<h2::proto::streams::stream::NextAccept> }, content_length: Omitted }
2025-02-11T04:48:17.962856Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(3); state=State { inner: HalfClosedRemote(AwaitingHeaders) }; is_closed=false; pending_send_empty=true; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:48:17.963315Z TRACE h2::proto::streams::send: send_headers; frame=Headers { stream_id: StreamId(3), flags: (0x4: END_HEADERS) }; init_window=65536
2025-02-11T04:48:17.963445Z TRACE Prioritize::queue_frame{stream.id=StreamId(3)}: h2::proto::streams::prioritize: schedule_send stream.id=StreamId(3)
2025-02-11T04:48:17.963539Z TRACE Prioritize::queue_frame{stream.id=StreamId(3)}: h2::proto::streams::store: Queue::push_back
2025-02-11T04:48:17.966334Z TRACE Prioritize::queue_frame{stream.id=StreamId(3)}: h2::proto::streams::store:  -> first entry
2025-02-11T04:48:17.966538Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(3); state=State { inner: HalfClosedRemote(Streaming) }; is_closed=false; pending_send_empty=false; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:48:17.966760Z TRACE reserve_capacity{stream.id=StreamId(3) requested=1 effective=1 curr=0}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::prioritize: requested=1 additional=1 buffered=0 window=65536 conn=1048576000
2025-02-11T04:48:17.966905Z TRACE reserve_capacity{stream.id=StreamId(3) requested=1 effective=1 curr=0}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::prioritize: assigning capacity=1
2025-02-11T04:48:17.967047Z TRACE reserve_capacity{stream.id=StreamId(3) requested=1 effective=1 curr=0}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::stream:   assigned capacity to stream; available=1; buffered=0; id=StreamId(3); max_buffer_size=409600 prev=0
2025-02-11T04:48:17.967191Z TRACE reserve_capacity{stream.id=StreamId(3) requested=1 effective=1 curr=0}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::stream:   notifying task
2025-02-11T04:48:17.967335Z TRACE reserve_capacity{stream.id=StreamId(3) requested=1 effective=1 curr=0}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::prioritize: available=1 requested=1 buffered=0 has_unavailable=true
2025-02-11T04:48:17.969307Z TRACE send_data{sz=23 requested=1}: h2::proto::streams::prioritize: buffered=23
2025-02-11T04:48:17.969493Z TRACE send_data{sz=23 requested=1}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::prioritize: requested=23 additional=22 buffered=23 window=65536 conn=1048575999
2025-02-11T04:48:17.969606Z TRACE send_data{sz=23 requested=1}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::prioritize: assigning capacity=22
2025-02-11T04:48:17.969715Z TRACE send_data{sz=23 requested=1}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::stream:   assigned capacity to stream; available=23; buffered=23; id=StreamId(3); max_buffer_size=409600 prev=0
2025-02-11T04:48:17.969829Z TRACE send_data{sz=23 requested=1}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::prioritize: available=23 requested=23 buffered=23 has_unavailable=true
2025-02-11T04:48:17.969937Z TRACE send_data{sz=23 requested=1}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::store: Queue::push_back
2025-02-11T04:48:17.970050Z TRACE send_data{sz=23 requested=1}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::store:  -> already queued
2025-02-11T04:48:17.970199Z TRACE send_data{sz=23 requested=1}: h2::proto::streams::state: send_close: HalfClosedRemote => Closed
2025-02-11T04:48:17.970400Z TRACE send_data{sz=23 requested=1}: h2::proto::streams::prioritize: available=23 buffered=23
2025-02-11T04:48:17.973145Z TRACE send_data{sz=23 requested=1}:Prioritize::queue_frame{stream.id=StreamId(3)}: h2::proto::streams::prioritize: schedule_send stream.id=StreamId(3)
2025-02-11T04:48:17.973395Z TRACE send_data{sz=23 requested=1}:Prioritize::queue_frame{stream.id=StreamId(3)}: h2::proto::streams::store: Queue::push_back
2025-02-11T04:48:17.973605Z TRACE send_data{sz=23 requested=1}:Prioritize::queue_frame{stream.id=StreamId(3)}: h2::proto::streams::store:  -> already queued
2025-02-11T04:48:17.973790Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(3); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=23; num_recv=1; num_send=0
2025-02-11T04:48:17.973969Z TRACE h2::proto::streams::streams: drop_stream_ref; stream=Stream { id: StreamId(3), state: State { inner: Closed(EndStream) }, is_counted: true, ref_count: 2, next_pending_send: None, is_pending_send: true, send_flow: FlowControl { window_size: Window(65536), available: Window(23) }, requested_send_capacity: 23, buffered_send_data: 23, send_task: Some(Waker { data: 0x26c6cae3f00, vtable: 0x7ff79efb6be0 }), pending_send: Deque { indices: Some(Indices { head: 0, tail: 1 }) }, next_pending_send_capacity: None, is_pending_send_capacity: false, send_capacity_inc: true, next_open: None, is_pending_open: false, is_pending_push: false, next_pending_accept: None, is_pending_accept: false, recv_flow: FlowControl { window_size: Window(1048576), available: Window(1048576) }, in_flight_recv_data: 0, next_window_update: None, is_pending_window_update: false, reset_at: None, next_reset_expire: None, pending_recv: Deque { indices: None }, is_recv: false, recv_task: None, push_task: None, pending_push_promises: Queue { indices: None, _p: PhantomData<h2::proto::streams::stream::NextAccept> }, content_length: Omitted }
2025-02-11T04:48:17.974173Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(3); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=23; num_recv=1; num_send=0
2025-02-11T04:48:17.980420Z TRACE h2::proto::streams::streams: drop_stream_ref; stream=Stream { id: StreamId(3), state: State { inner: Closed(EndStream) }, is_counted: true, ref_count: 1, next_pending_send: None, is_pending_send: true, send_flow: FlowControl { window_size: Window(65536), available: Window(23) }, requested_send_capacity: 23, buffered_send_data: 23, send_task: Some(Waker { data: 0x26c6cae3f00, vtable: 0x7ff79efb6be0 }), pending_send: Deque { indices: Some(Indices { head: 0, tail: 1 }) }, next_pending_send_capacity: None, is_pending_send_capacity: false, send_capacity_inc: true, next_open: None, is_pending_open: false, is_pending_push: false, next_pending_accept: None, is_pending_accept: false, recv_flow: FlowControl { window_size: Window(1048576), available: Window(1048576) }, in_flight_recv_data: 0, next_window_update: None, is_pending_window_update: false, reset_at: None, next_reset_expire: None, pending_recv: Deque { indices: None }, is_recv: false, recv_task: None, push_task: None, pending_push_promises: Queue { indices: None, _p: PhantomData<h2::proto::streams::stream::NextAccept> }, content_length: Omitted }
2025-02-11T04:48:17.980623Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(3); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=23; num_recv=1; num_send=0
2025-02-11T04:48:17.980809Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T04:48:17.980984Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:17.981153Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: poll_complete
2025-02-11T04:48:17.981276Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:48:17.981477Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: is_pending_reset=false
2025-02-11T04:48:17.982590Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: pop_frame; frame=Headers { stream_id: StreamId(3), flags: (0x4: END_HEADERS) }
2025-02-11T04:48:17.982845Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::store: Queue::push_back
2025-02-11T04:48:17.983019Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::store:  -> first entry
2025-02-11T04:48:17.983250Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::counts: transition_after; stream=StreamId(3); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=23; num_recv=1; num_send=0
2025-02-11T04:48:17.983491Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: writing frame=Headers { stream_id: StreamId(3), flags: (0x4: END_HEADERS) }
2025-02-11T04:48:17.983734Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=Headers { stream_id: StreamId(3), flags: (0x4: END_HEADERS) }}: h2::codec::framed_write: send frame=Headers { stream_id: StreamId(3), flags: (0x4: END_HEADERS) }
2025-02-11T04:48:17.985953Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:48:17.986253Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: is_pending_reset=false
2025-02-11T04:48:17.986501Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: data frame sz=23 eos=true window=23 available=23 requested=23 buffered=23
2025-02-11T04:48:17.986720Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: sending data frame len=23
2025-02-11T04:48:17.986969Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}:updating stream flow: h2::proto::streams::flow_control: send_data; sz=23; window=65536; available=23
2025-02-11T04:48:17.989561Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}:updating stream flow: h2::proto::streams::stream:   sent stream data; available=0; buffered=0; id=StreamId(3); max_buffer_size=409600 prev=0
2025-02-11T04:48:17.990003Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}:updating connection flow: h2::proto::streams::flow_control: send_data; sz=23; window=1048576000; available=1048576000
2025-02-11T04:48:17.990362Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: pop_frame; frame=Data { stream_id: StreamId(3), flags: (0x1: END_STREAM) }
2025-02-11T04:48:17.990622Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::counts: transition_after; stream=StreamId(3); state=State { inner: Closed(EndStream) }; is_closed=true; pending_send_empty=true; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:48:17.990780Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::counts: dec_num_streams; stream=StreamId(3)
2025-02-11T04:48:17.993128Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: writing frame=Data { stream_id: StreamId(3), flags: (0x1: END_STREAM) }
2025-02-11T04:48:17.993309Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=Data { stream_id: StreamId(3), flags: (0x1: END_STREAM) }}: h2::codec::framed_write: send frame=Data { stream_id: StreamId(3), flags: (0x1: END_STREAM) }
2025-02-11T04:48:17.993456Z TRACE server_handshake:Connection{peer=Server}:poll:try_reclaim_frame: h2::proto::streams::prioritize: reclaimed frame=Data { stream_id: StreamId(3), flags: (0x1: END_STREAM) } sz=0
2025-02-11T04:48:17.993604Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:48:17.993762Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: queued_data_frame=false
2025-02-11T04:48:17.994285Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:48:18.245644Z DEBUG server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::codec::framed_write: send frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }
2025-02-11T04:48:18.245768Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::frame::settings: encoding SETTINGS; len=24
2025-02-11T04:48:18.245882Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::frame::settings: encoding setting; val=MaxConcurrentStreams(200)
2025-02-11T04:48:18.245987Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::frame::settings: encoding setting; val=InitialWindowSize(1048576)
2025-02-11T04:48:18.246079Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::frame::settings: encoding setting; val=MaxFrameSize(16384)
2025-02-11T04:48:18.246188Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::frame::settings: encoding setting; val=MaxHeaderListSize(16384)
2025-02-11T04:48:18.246289Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::codec::framed_write: encoded settings rem=33
2025-02-11T04:48:18.246398Z TRACE server_handshake: h2::server: state=Flushing(_)
2025-02-11T04:48:18.246508Z TRACE server_handshake:flush:FramedWrite::flush: h2::codec::framed_write: queued_data_frame=false
2025-02-11T04:48:18.246765Z TRACE server_handshake:flush:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:48:18.246911Z TRACE server_handshake: h2::server: flush.poll=Ready
2025-02-11T04:48:18.247084Z TRACE server_handshake: h2::proto::streams::flow_control: inc_window; sz=65535; old=0; new=65535
2025-02-11T04:48:18.247235Z TRACE server_handshake: h2::proto::streams::flow_control: inc_window; sz=65535; old=0; new=65535
2025-02-11T04:48:18.247473Z TRACE server_handshake: h2::proto::streams::prioritize: Prioritize::new; flow=FlowControl { window_size: Window(65535), available: Window(65535) }
2025-02-11T04:48:18.247679Z TRACE server_handshake: h2::server: connection established!
2025-02-11T04:48:18.247841Z TRACE server_handshake: h2::proto::streams::recv: set_target_connection_window; target=1048576; available=65535, reserved=0
2025-02-11T04:48:18.248006Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T04:48:18.248172Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:18.248312Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=27
2025-02-11T04:48:18.248488Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=27}: h2::codec::framed_read: decoding frame from 27B
2025-02-11T04:48:18.249915Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=27}: h2::codec::framed_read: frame.kind=Settings
2025-02-11T04:48:18.250340Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=Settings { flags: (0x0), enable_push: 0, max_concurrent_streams: 100, initial_window_size: 65536 }
2025-02-11T04:48:18.250493Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv SETTINGS frame=Settings { flags: (0x0), enable_push: 0, max_concurrent_streams: 100, initial_window_size: 65536 }
2025-02-11T04:48:18.250675Z DEBUG server_handshake:Connection{peer=Server}:poll:poll_ready:FramedWrite::buffer{frame=Settings { flags: (0x1: ACK) }}: h2::codec::framed_write: send frame=Settings { flags: (0x1: ACK) }
2025-02-11T04:48:18.250869Z TRACE server_handshake:Connection{peer=Server}:poll:poll_ready:FramedWrite::buffer{frame=Settings { flags: (0x1: ACK) }}: h2::frame::settings: encoding SETTINGS; len=0
2025-02-11T04:48:18.251035Z TRACE server_handshake:Connection{peer=Server}:poll:poll_ready:FramedWrite::buffer{frame=Settings { flags: (0x1: ACK) }}: h2::codec::framed_write: encoded settings rem=9
2025-02-11T04:48:18.253921Z TRACE server_handshake:Connection{peer=Server}:poll:poll_ready: h2::proto::settings: ACK sent; applying settings
2025-02-11T04:48:18.254155Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:18.254327Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=13
2025-02-11T04:48:18.254501Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=13}: h2::codec::framed_read: decoding frame from 13B
2025-02-11T04:48:18.254660Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=13}: h2::codec::framed_read: frame.kind=WindowUpdate
2025-02-11T04:48:18.254836Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=WindowUpdate { stream_id: StreamId(0), size_increment: 1048510465 }
2025-02-11T04:48:18.254981Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv WINDOW_UPDATE frame=WindowUpdate { stream_id: StreamId(0), size_increment: 1048510465 }
2025-02-11T04:48:18.259863Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=1048510465; old=65535; new=1048576000
2025-02-11T04:48:18.260132Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:18.260334Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=85
2025-02-11T04:48:18.260492Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}: h2::codec::framed_read: decoding frame from 85B
2025-02-11T04:48:18.260638Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}: h2::codec::framed_read: frame.kind=Headers
2025-02-11T04:48:18.260833Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}: h2::frame::headers: loading headers; flags=(0x4: END_HEADERS)
2025-02-11T04:48:18.261015Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}:hpack::decode: h2::hpack::decoder: decode
2025-02-11T04:48:18.265449Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}:hpack::decode: h2::hpack::decoder: rem=76 kind=LiteralWithIndexing
2025-02-11T04:48:18.265776Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}:hpack::decode: h2::hpack::decoder: rem=67 kind=Indexed
2025-02-11T04:48:18.265988Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}:hpack::decode: h2::hpack::decoder: rem=66 kind=LiteralWithIndexing
2025-02-11T04:48:18.266211Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}:hpack::decode: h2::hpack::decoder: rem=58 kind=LiteralWithoutIndexing
2025-02-11T04:48:18.266427Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}:hpack::decode: h2::hpack::decoder: rem=44 kind=LiteralWithIndexing
2025-02-11T04:48:18.270114Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}:hpack::decode: h2::hpack::decoder: rem=27 kind=LiteralWithIndexing
2025-02-11T04:48:18.270322Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}:hpack::decode: h2::hpack::decoder: rem=22 kind=LiteralWithIndexing
2025-02-11T04:48:18.270635Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}:hpack::decode: h2::hpack::decoder: rem=14 kind=LiteralWithIndexing
2025-02-11T04:48:18.270906Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}:hpack::decode: h2::hpack::decoder: rem=6 kind=LiteralWithoutIndexing
2025-02-11T04:48:18.271139Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=Headers { stream_id: StreamId(1), flags: (0x4: END_HEADERS) }
2025-02-11T04:48:18.271296Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv HEADERS frame=Headers { stream_id: StreamId(1), flags: (0x4: END_HEADERS) }
2025-02-11T04:48:18.275210Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=65535; old=0; new=65535
2025-02-11T04:48:18.275403Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=65536; old=0; new=65536
2025-02-11T04:48:18.275559Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::streams: recv_headers; stream=StreamId(1); state=State { inner: Idle }
2025-02-11T04:48:18.275684Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::recv: opening stream; init_window=65535
2025-02-11T04:48:18.275827Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::store: Queue::push_back
2025-02-11T04:48:18.275947Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::store:  -> first entry
2025-02-11T04:48:18.276084Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: Open { local: AwaitingHeaders, remote: Streaming } }; is_closed=false; pending_send_empty=true; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:48:18.276258Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:18.279521Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=172
2025-02-11T04:48:18.279943Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=172}: h2::codec::framed_read: decoding frame from 172B
2025-02-11T04:48:18.280108Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=172}: h2::codec::framed_read: frame.kind=Data
2025-02-11T04:48:18.280249Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=Data { stream_id: StreamId(1), flags: (0x1: END_STREAM) }
2025-02-11T04:48:18.280375Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv DATA frame=Data { stream_id: StreamId(1), flags: (0x1: END_STREAM) }
2025-02-11T04:48:18.280492Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::recv: recv_data; size=163; connection=65535; stream=65535
2025-02-11T04:48:18.280603Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: send_data; sz=163; window=65535; available=1048576
2025-02-11T04:48:18.280714Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::state: recv_close: Open => HalfClosedRemote(AwaitingHeaders)
2025-02-11T04:48:18.283479Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: send_data; sz=163; window=65535; available=65535
2025-02-11T04:48:18.283893Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: HalfClosedRemote(AwaitingHeaders) }; is_closed=false; pending_send_empty=true; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:48:18.284229Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:18.284503Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=9
2025-02-11T04:48:18.284762Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=9}: h2::codec::framed_read: decoding frame from 9B
2025-02-11T04:48:18.284905Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=9}: h2::codec::framed_read: frame.kind=Settings
2025-02-11T04:48:18.285045Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=Settings { flags: (0x1: ACK) }
2025-02-11T04:48:18.287370Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv SETTINGS frame=Settings { flags: (0x1: ACK) }
2025-02-11T04:48:18.287596Z DEBUG server_handshake:Connection{peer=Server}:poll: h2::proto::settings: received settings ACK; applying Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }
2025-02-11T04:48:18.287834Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::recv: update_initial_window_size; new=1048576; old=65535
2025-02-11T04:48:18.288163Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::recv: incrementing all windows; inc=983041
2025-02-11T04:48:18.288403Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=983041; old=65372; new=1048413
2025-02-11T04:48:18.288721Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:18.288948Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=WindowUpdate { stream_id: StreamId(0), size_increment: 983041 }}: h2::codec::framed_write: send frame=WindowUpdate { stream_id: StreamId(0), size_increment: 983041 }
2025-02-11T04:48:18.294130Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=WindowUpdate { stream_id: StreamId(0), size_increment: 983041 }}: h2::frame::window_update: encoding WINDOW_UPDATE; id=StreamId(0)
2025-02-11T04:48:18.294351Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=WindowUpdate { stream_id: StreamId(0), size_increment: 983041 }}: h2::codec::framed_write: encoded window_update rem=22
2025-02-11T04:48:18.294487Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=983041; old=65372; new=1048413
2025-02-11T04:48:18.294619Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: poll_complete
2025-02-11T04:48:18.294733Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:48:18.294873Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: queued_data_frame=false
2025-02-11T04:48:18.295091Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:48:18.295205Z TRACE h2::proto::streams::streams: next_incoming; id=StreamId(1), state=State { inner: HalfClosedRemote(AwaitingHeaders) }
2025-02-11T04:48:18.295279Z TRACE h2::server: received incoming
2025-02-11T04:48:18.297892Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T04:48:18.298244Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:18.298621Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: poll_complete
2025-02-11T04:48:18.298916Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:48:18.299186Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:48:18.299477Z TRACE h2::proto::streams::streams: drop_stream_ref; stream=Stream { id: StreamId(1), state: State { inner: HalfClosedRemote(AwaitingHeaders) }, is_counted: true, ref_count: 2, next_pending_send: None, is_pending_send: false, send_flow: FlowControl { window_size: Window(65536), available: Window(0) }, requested_send_capacity: 0, buffered_send_data: 0, send_task: None, pending_send: Deque { indices: None }, next_pending_send_capacity: None, is_pending_send_capacity: false, send_capacity_inc: false, next_open: None, is_pending_open: false, is_pending_push: false, next_pending_accept: None, is_pending_accept: false, recv_flow: FlowControl { window_size: Window(1048413), available: Window(1048413) }, in_flight_recv_data: 163, next_window_update: None, is_pending_window_update: false, reset_at: None, next_reset_expire: None, pending_recv: Deque { indices: None }, is_recv: false, recv_task: None, push_task: None, pending_push_promises: Queue { indices: None, _p: PhantomData<h2::proto::streams::stream::NextAccept> }, content_length: Remaining(0) }
2025-02-11T04:48:18.299585Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: HalfClosedRemote(AwaitingHeaders) }; is_closed=false; pending_send_empty=true; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:48:18.302645Z  INFO hydroxide::server: PROPFIND request
2025-02-11T04:48:18.302881Z TRACE h2::proto::streams::send: send_headers; frame=Headers { stream_id: StreamId(1), flags: (0x4: END_HEADERS) }; init_window=65536
2025-02-11T04:48:18.303060Z TRACE Prioritize::queue_frame{stream.id=StreamId(1)}: h2::proto::streams::prioritize: schedule_send stream.id=StreamId(1)
2025-02-11T04:48:18.303174Z TRACE Prioritize::queue_frame{stream.id=StreamId(1)}: h2::proto::streams::store: Queue::push_back
2025-02-11T04:48:18.303268Z TRACE Prioritize::queue_frame{stream.id=StreamId(1)}: h2::proto::streams::store:  -> first entry
2025-02-11T04:48:18.303371Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: HalfClosedRemote(Streaming) }; is_closed=false; pending_send_empty=false; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:48:18.303520Z TRACE reserve_capacity{stream.id=StreamId(1) requested=1 effective=1 curr=0}:try_assign_capacity{stream.id=StreamId(1)}: h2::proto::streams::prioritize: requested=1 additional=1 buffered=0 window=65536 conn=1048576000
2025-02-11T04:48:18.303635Z TRACE reserve_capacity{stream.id=StreamId(1) requested=1 effective=1 curr=0}:try_assign_capacity{stream.id=StreamId(1)}: h2::proto::streams::prioritize: assigning capacity=1
2025-02-11T04:48:18.303746Z TRACE reserve_capacity{stream.id=StreamId(1) requested=1 effective=1 curr=0}:try_assign_capacity{stream.id=StreamId(1)}: h2::proto::streams::stream:   assigned capacity to stream; available=1; buffered=0; id=StreamId(1); max_buffer_size=409600 prev=0
2025-02-11T04:48:18.305962Z TRACE reserve_capacity{stream.id=StreamId(1) requested=1 effective=1 curr=0}:try_assign_capacity{stream.id=StreamId(1)}: h2::proto::streams::stream:   notifying task
2025-02-11T04:48:18.306289Z TRACE reserve_capacity{stream.id=StreamId(1) requested=1 effective=1 curr=0}:try_assign_capacity{stream.id=StreamId(1)}: h2::proto::streams::prioritize: available=1 requested=1 buffered=0 has_unavailable=true
2025-02-11T04:48:18.306432Z TRACE send_data{sz=80 requested=1}: h2::proto::streams::prioritize: buffered=80
2025-02-11T04:48:18.306568Z TRACE send_data{sz=80 requested=1}:try_assign_capacity{stream.id=StreamId(1)}: h2::proto::streams::prioritize: requested=80 additional=79 buffered=80 window=65536 conn=1048575999
2025-02-11T04:48:18.306693Z TRACE send_data{sz=80 requested=1}:try_assign_capacity{stream.id=StreamId(1)}: h2::proto::streams::prioritize: assigning capacity=79
2025-02-11T04:48:18.306853Z TRACE send_data{sz=80 requested=1}:try_assign_capacity{stream.id=StreamId(1)}: h2::proto::streams::stream:   assigned capacity to stream; available=80; buffered=80; id=StreamId(1); max_buffer_size=409600 prev=0
2025-02-11T04:48:18.307025Z TRACE send_data{sz=80 requested=1}:try_assign_capacity{stream.id=StreamId(1)}: h2::proto::streams::prioritize: available=80 requested=80 buffered=80 has_unavailable=true
2025-02-11T04:48:18.307201Z TRACE send_data{sz=80 requested=1}:try_assign_capacity{stream.id=StreamId(1)}: h2::proto::streams::store: Queue::push_back
2025-02-11T04:48:18.309927Z TRACE send_data{sz=80 requested=1}:try_assign_capacity{stream.id=StreamId(1)}: h2::proto::streams::store:  -> already queued
2025-02-11T04:48:18.310118Z TRACE send_data{sz=80 requested=1}: h2::proto::streams::state: send_close: HalfClosedRemote => Closed
2025-02-11T04:48:18.310259Z TRACE send_data{sz=80 requested=1}: h2::proto::streams::prioritize: available=80 buffered=80
2025-02-11T04:48:18.310388Z TRACE send_data{sz=80 requested=1}:Prioritize::queue_frame{stream.id=StreamId(1)}: h2::proto::streams::prioritize: schedule_send stream.id=StreamId(1)
2025-02-11T04:48:18.310511Z TRACE send_data{sz=80 requested=1}:Prioritize::queue_frame{stream.id=StreamId(1)}: h2::proto::streams::store: Queue::push_back
2025-02-11T04:48:18.310625Z TRACE send_data{sz=80 requested=1}:Prioritize::queue_frame{stream.id=StreamId(1)}: h2::proto::streams::store:  -> already queued
2025-02-11T04:48:18.310732Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=80; num_recv=1; num_send=0
2025-02-11T04:48:18.313997Z TRACE h2::proto::streams::streams: drop_stream_ref; stream=Stream { id: StreamId(1), state: State { inner: Closed(EndStream) }, is_counted: true, ref_count: 2, next_pending_send: None, is_pending_send: true, send_flow: FlowControl { window_size: Window(65536), available: Window(80) }, requested_send_capacity: 80, buffered_send_data: 80, send_task: Some(Waker { data: 0x26c6cae4b80, vtable: 0x7ff79efb6be0 }), pending_send: Deque { indices: Some(Indices { head: 0, tail: 1 }) }, next_pending_send_capacity: None, is_pending_send_capacity: false, send_capacity_inc: true, next_open: None, is_pending_open: false, is_pending_push: false, next_pending_accept: None, is_pending_accept: false, recv_flow: FlowControl { window_size: Window(1048413), available: Window(1048413) }, in_flight_recv_data: 163, next_window_update: None, is_pending_window_update: false, reset_at: None, next_reset_expire: None, pending_recv: Deque { indices: None }, is_recv: false, recv_task: None, push_task: None, pending_push_promises: Queue { indices: None, _p: PhantomData<h2::proto::streams::stream::NextAccept> }, content_length: Remaining(0) }
2025-02-11T04:48:18.314213Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=80; num_recv=1; num_send=0
2025-02-11T04:48:18.314469Z TRACE h2::proto::streams::streams: drop_stream_ref; stream=Stream { id: StreamId(1), state: State { inner: Closed(EndStream) }, is_counted: true, ref_count: 1, next_pending_send: None, is_pending_send: true, send_flow: FlowControl { window_size: Window(65536), available: Window(80) }, requested_send_capacity: 80, buffered_send_data: 80, send_task: Some(Waker { data: 0x26c6cae4b80, vtable: 0x7ff79efb6be0 }), pending_send: Deque { indices: Some(Indices { head: 0, tail: 1 }) }, next_pending_send_capacity: None, is_pending_send_capacity: false, send_capacity_inc: true, next_open: None, is_pending_open: false, is_pending_push: false, next_pending_accept: None, is_pending_accept: false, recv_flow: FlowControl { window_size: Window(1048413), available: Window(1048413) }, in_flight_recv_data: 163, next_window_update: None, is_pending_window_update: false, reset_at: None, next_reset_expire: None, pending_recv: Deque { indices: None }, is_recv: false, recv_task: None, push_task: None, pending_push_promises: Queue { indices: None, _p: PhantomData<h2::proto::streams::stream::NextAccept> }, content_length: Remaining(0) }
2025-02-11T04:48:18.314654Z TRACE h2::proto::streams::recv: auto-release closed stream (StreamId(1)) capacity: 163
2025-02-11T04:48:18.314776Z TRACE h2::proto::streams::recv: release_connection_capacity; size=163, connection in_flight_data=163
2025-02-11T04:48:18.314917Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=80; num_recv=1; num_send=0
2025-02-11T04:48:18.315201Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T04:48:18.315456Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:18.317014Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: poll_complete
2025-02-11T04:48:18.317163Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:48:18.317344Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: is_pending_reset=false
2025-02-11T04:48:18.317530Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: pop_frame; frame=Headers { stream_id: StreamId(1), flags: (0x4: END_HEADERS) }
2025-02-11T04:48:18.317710Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::store: Queue::push_back
2025-02-11T04:48:18.317891Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::store:  -> first entry
2025-02-11T04:48:18.321746Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=80; num_recv=1; num_send=0
2025-02-11T04:48:18.321992Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: writing frame=Headers { stream_id: StreamId(1), flags: (0x4: END_HEADERS) }
2025-02-11T04:48:18.322181Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=Headers { stream_id: StreamId(1), flags: (0x4: END_HEADERS) }}: h2::codec::framed_write: send frame=Headers { stream_id: StreamId(1), flags: (0x4: END_HEADERS) }
2025-02-11T04:48:18.322368Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:48:18.322533Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: is_pending_reset=false
2025-02-11T04:48:18.322699Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: data frame sz=80 eos=true window=80 available=80 requested=80 buffered=80
2025-02-11T04:48:18.325823Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: sending data frame len=80
2025-02-11T04:48:18.326069Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}:updating stream flow: h2::proto::streams::flow_control: send_data; sz=80; window=65536; available=80
2025-02-11T04:48:18.326264Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}:updating stream flow: h2::proto::streams::stream:   sent stream data; available=0; buffered=0; id=StreamId(1); max_buffer_size=409600 prev=0
2025-02-11T04:48:18.326462Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}:updating connection flow: h2::proto::streams::flow_control: send_data; sz=80; window=1048576000; available=1048576000
2025-02-11T04:48:18.326636Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: pop_frame; frame=Data { stream_id: StreamId(1), flags: (0x1: END_STREAM) }
2025-02-11T04:48:18.329801Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: Closed(EndStream) }; is_closed=true; pending_send_empty=true; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:48:18.330040Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::counts: dec_num_streams; stream=StreamId(1)
2025-02-11T04:48:18.330227Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: writing frame=Data { stream_id: StreamId(1), flags: (0x1: END_STREAM) }
2025-02-11T04:48:18.330429Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=Data { stream_id: StreamId(1), flags: (0x1: END_STREAM) }}: h2::codec::framed_write: send frame=Data { stream_id: StreamId(1), flags: (0x1: END_STREAM) }
2025-02-11T04:48:18.330579Z TRACE server_handshake:Connection{peer=Server}:poll:try_reclaim_frame: h2::proto::streams::prioritize: reclaimed frame=Data { stream_id: StreamId(1), flags: (0x1: END_STREAM) } sz=0
2025-02-11T04:48:18.330707Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:48:18.330954Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: queued_data_frame=false
2025-02-11T04:48:18.334468Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:48:18.334913Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T04:48:18.335153Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:18.335405Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=26
2025-02-11T04:48:18.335627Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=26}: h2::codec::framed_read: decoding frame from 26B
2025-02-11T04:48:18.335835Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=26}: h2::codec::framed_read: frame.kind=GoAway
2025-02-11T04:48:18.336012Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=GoAway { error_code: NO_ERROR, last_stream_id: StreamId(0), debug_data: b"shutdown\0" }
2025-02-11T04:48:18.339521Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv GOAWAY frame=GoAway { error_code: NO_ERROR, last_stream_id: StreamId(0), debug_data: b"shutdown\0" }
2025-02-11T04:48:18.339858Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:18.340135Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: codec closed
2025-02-11T04:48:18.340338Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::streams: Streams::recv_eof
2025-02-11T04:48:18.340571Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Closing(NO_ERROR, Library)
2025-02-11T04:48:18.340736Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection closing after flush
2025-02-11T04:48:18.340933Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:48:18.341208Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Closed(NO_ERROR, Library)
2025-02-11T04:48:18.341330Z TRACE h2::proto::streams::streams: Streams::recv_eof
2025-02-11T04:48:18.345547Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T04:48:18.345794Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:18.345954Z DEBUG server_handshake:Connection{peer=Server}:poll: h2::proto::connection: Connection::poll; IO error error=ConnectionReset
2025-02-11T04:48:18.346067Z TRACE h2::proto::streams::streams: Streams::recv_eof
2025-02-11T04:48:21.822633Z  INFO hydroxide::server: Shutting down server...
2025-02-11T04:48:21.822792Z TRACE axum::serve: received graceful shutdown signal. Telling tasks to shutdown
2025-02-11T04:48:21.822939Z TRACE axum::serve: signal received, not accepting new connections
2025-02-11T04:48:21.823120Z TRACE axum::serve: waiting for 0 task(s) to finish
2025-02-11T04:48:24.819419Z TRACE hydroxide::cli: No custom port was specified, defaulting to 80
2025-02-11T04:48:24.819617Z TRACE hydroxide::config: Built Config: 
Url = localhost:80,
https = false,
self signed = false,
loglevel = Info
2025-02-11T04:48:24.821945Z  INFO hydroxide::server: Starting HTTP redirect server on 0.0.0.0:80
2025-02-11T04:48:24.822106Z  INFO hydroxide::server: Starting HTTPS server on 0.0.0.0:443
2025-02-11T04:48:39.349929Z DEBUG server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::codec::framed_write: send frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }
2025-02-11T04:48:39.350293Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::frame::settings: encoding SETTINGS; len=24
2025-02-11T04:48:39.350592Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::frame::settings: encoding setting; val=MaxConcurrentStreams(200)
2025-02-11T04:48:39.350730Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::frame::settings: encoding setting; val=InitialWindowSize(1048576)
2025-02-11T04:48:39.350922Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::frame::settings: encoding setting; val=MaxFrameSize(16384)
2025-02-11T04:48:39.351256Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::frame::settings: encoding setting; val=MaxHeaderListSize(16384)
2025-02-11T04:48:39.351509Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::codec::framed_write: encoded settings rem=33
2025-02-11T04:48:39.351720Z TRACE server_handshake: h2::server: state=Flushing(_)
2025-02-11T04:48:39.351956Z TRACE server_handshake:flush:FramedWrite::flush: h2::codec::framed_write: queued_data_frame=false
2025-02-11T04:48:39.352210Z TRACE server_handshake:flush:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:48:39.352552Z TRACE server_handshake: h2::server: flush.poll=Ready
2025-02-11T04:48:39.352774Z TRACE server_handshake: h2::proto::streams::flow_control: inc_window; sz=65535; old=0; new=65535
2025-02-11T04:48:39.352893Z TRACE server_handshake: h2::proto::streams::flow_control: inc_window; sz=65535; old=0; new=65535
2025-02-11T04:48:39.352992Z TRACE server_handshake: h2::proto::streams::prioritize: Prioritize::new; flow=FlowControl { window_size: Window(65535), available: Window(65535) }
2025-02-11T04:48:39.353127Z TRACE server_handshake: h2::server: connection established!
2025-02-11T04:48:39.353243Z TRACE server_handshake: h2::proto::streams::recv: set_target_connection_window; target=1048576; available=65535, reserved=0
2025-02-11T04:48:39.353396Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T04:48:39.353587Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:39.353746Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=27
2025-02-11T04:48:39.353926Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=27}: h2::codec::framed_read: decoding frame from 27B
2025-02-11T04:48:39.354098Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=27}: h2::codec::framed_read: frame.kind=Settings
2025-02-11T04:48:39.355119Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=Settings { flags: (0x0), enable_push: 0, max_concurrent_streams: 100, initial_window_size: 65536 }
2025-02-11T04:48:39.355295Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv SETTINGS frame=Settings { flags: (0x0), enable_push: 0, max_concurrent_streams: 100, initial_window_size: 65536 }
2025-02-11T04:48:39.355490Z DEBUG server_handshake:Connection{peer=Server}:poll:poll_ready:FramedWrite::buffer{frame=Settings { flags: (0x1: ACK) }}: h2::codec::framed_write: send frame=Settings { flags: (0x1: ACK) }
2025-02-11T04:48:39.355653Z TRACE server_handshake:Connection{peer=Server}:poll:poll_ready:FramedWrite::buffer{frame=Settings { flags: (0x1: ACK) }}: h2::frame::settings: encoding SETTINGS; len=0
2025-02-11T04:48:39.355803Z TRACE server_handshake:Connection{peer=Server}:poll:poll_ready:FramedWrite::buffer{frame=Settings { flags: (0x1: ACK) }}: h2::codec::framed_write: encoded settings rem=9
2025-02-11T04:48:39.355961Z TRACE server_handshake:Connection{peer=Server}:poll:poll_ready: h2::proto::settings: ACK sent; applying settings
2025-02-11T04:48:39.356140Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:39.358777Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=13
2025-02-11T04:48:39.359083Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=13}: h2::codec::framed_read: decoding frame from 13B
2025-02-11T04:48:39.359354Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=13}: h2::codec::framed_read: frame.kind=WindowUpdate
2025-02-11T04:48:39.359607Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=WindowUpdate { stream_id: StreamId(0), size_increment: 1048510465 }
2025-02-11T04:48:39.359857Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv WINDOW_UPDATE frame=WindowUpdate { stream_id: StreamId(0), size_increment: 1048510465 }
2025-02-11T04:48:39.360036Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=1048510465; old=65535; new=1048576000
2025-02-11T04:48:39.360224Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:39.362493Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=114
2025-02-11T04:48:39.362727Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}: h2::codec::framed_read: decoding frame from 114B
2025-02-11T04:48:39.362871Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}: h2::codec::framed_read: frame.kind=Headers
2025-02-11T04:48:39.363052Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}: h2::frame::headers: loading headers; flags=(0x5: END_HEADERS | END_STREAM)
2025-02-11T04:48:39.363232Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}:hpack::decode: h2::hpack::decoder: decode
2025-02-11T04:48:39.363394Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}:hpack::decode: h2::hpack::decoder: rem=105 kind=Indexed
2025-02-11T04:48:39.366701Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}:hpack::decode: h2::hpack::decoder: rem=104 kind=Indexed
2025-02-11T04:48:39.366971Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}:hpack::decode: h2::hpack::decoder: rem=103 kind=LiteralWithIndexing
2025-02-11T04:48:39.367343Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}:hpack::decode: h2::hpack::decoder: rem=95 kind=LiteralWithoutIndexing
2025-02-11T04:48:39.367653Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}:hpack::decode: h2::hpack::decoder: rem=56 kind=LiteralWithIndexing
2025-02-11T04:48:39.367949Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}:hpack::decode: h2::hpack::decoder: rem=39 kind=LiteralWithIndexing
2025-02-11T04:48:39.370798Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}:hpack::decode: h2::hpack::decoder: rem=34 kind=LiteralWithIndexing
2025-02-11T04:48:39.371146Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=114}:hpack::decode: h2::hpack::decoder: rem=14 kind=LiteralWithIndexing
2025-02-11T04:48:39.371451Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=Headers { stream_id: StreamId(1), flags: (0x5: END_HEADERS | END_STREAM) }
2025-02-11T04:48:39.371602Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv HEADERS frame=Headers { stream_id: StreamId(1), flags: (0x5: END_HEADERS | END_STREAM) }
2025-02-11T04:48:39.371867Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=65535; old=0; new=65535
2025-02-11T04:48:39.372068Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=65536; old=0; new=65536
2025-02-11T04:48:39.372216Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::streams: recv_headers; stream=StreamId(1); state=State { inner: Idle }
2025-02-11T04:48:39.375502Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::recv: opening stream; init_window=65535
2025-02-11T04:48:39.375800Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::store: Queue::push_back
2025-02-11T04:48:39.375935Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::store:  -> first entry
2025-02-11T04:48:39.376083Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: HalfClosedRemote(AwaitingHeaders) }; is_closed=false; pending_send_empty=true; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:48:39.376297Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:39.376481Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=9
2025-02-11T04:48:39.376649Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=9}: h2::codec::framed_read: decoding frame from 9B
2025-02-11T04:48:39.376798Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=9}: h2::codec::framed_read: frame.kind=Settings
2025-02-11T04:48:39.382295Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=Settings { flags: (0x1: ACK) }
2025-02-11T04:48:39.382564Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv SETTINGS frame=Settings { flags: (0x1: ACK) }
2025-02-11T04:48:39.382754Z DEBUG server_handshake:Connection{peer=Server}:poll: h2::proto::settings: received settings ACK; applying Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }
2025-02-11T04:48:39.382946Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::recv: update_initial_window_size; new=1048576; old=65535
2025-02-11T04:48:39.383123Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::recv: incrementing all windows; inc=983041
2025-02-11T04:48:39.383496Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=983041; old=65535; new=1048576
2025-02-11T04:48:39.383850Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:39.386244Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=WindowUpdate { stream_id: StreamId(0), size_increment: 983041 }}: h2::codec::framed_write: send frame=WindowUpdate { stream_id: StreamId(0), size_increment: 983041 }
2025-02-11T04:48:39.386417Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=WindowUpdate { stream_id: StreamId(0), size_increment: 983041 }}: h2::frame::window_update: encoding WINDOW_UPDATE; id=StreamId(0)
2025-02-11T04:48:39.386581Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=WindowUpdate { stream_id: StreamId(0), size_increment: 983041 }}: h2::codec::framed_write: encoded window_update rem=22
2025-02-11T04:48:39.386795Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=983041; old=65535; new=1048576
2025-02-11T04:48:39.386992Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: poll_complete
2025-02-11T04:48:39.387201Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:48:39.387495Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: queued_data_frame=false
2025-02-11T04:48:39.387854Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:48:39.389812Z TRACE h2::proto::streams::streams: next_incoming; id=StreamId(1), state=State { inner: HalfClosedRemote(AwaitingHeaders) }
2025-02-11T04:48:39.389915Z TRACE h2::server: received incoming
2025-02-11T04:48:39.390113Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T04:48:39.390284Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:39.390430Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: poll_complete
2025-02-11T04:48:39.390601Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:48:39.390774Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:48:39.393810Z TRACE h2::proto::streams::streams: drop_stream_ref; stream=Stream { id: StreamId(1), state: State { inner: HalfClosedRemote(AwaitingHeaders) }, is_counted: true, ref_count: 2, next_pending_send: None, is_pending_send: false, send_flow: FlowControl { window_size: Window(65536), available: Window(0) }, requested_send_capacity: 0, buffered_send_data: 0, send_task: None, pending_send: Deque { indices: None }, next_pending_send_capacity: None, is_pending_send_capacity: false, send_capacity_inc: false, next_open: None, is_pending_open: false, is_pending_push: false, next_pending_accept: None, is_pending_accept: false, recv_flow: FlowControl { window_size: Window(1048576), available: Window(1048576) }, in_flight_recv_data: 0, next_window_update: None, is_pending_window_update: false, reset_at: None, next_reset_expire: None, pending_recv: Deque { indices: None }, is_recv: false, recv_task: None, push_task: None, pending_push_promises: Queue { indices: None, _p: PhantomData<h2::proto::streams::stream::NextAccept> }, content_length: Omitted }
2025-02-11T04:48:39.393919Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: HalfClosedRemote(AwaitingHeaders) }; is_closed=false; pending_send_empty=true; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:48:39.394682Z TRACE h2::proto::streams::send: send_headers; frame=Headers { stream_id: StreamId(1), flags: (0x5: END_HEADERS | END_STREAM) }; init_window=65536
2025-02-11T04:48:39.394899Z TRACE Prioritize::queue_frame{stream.id=StreamId(1)}: h2::proto::streams::prioritize: schedule_send stream.id=StreamId(1)
2025-02-11T04:48:39.395011Z TRACE Prioritize::queue_frame{stream.id=StreamId(1)}: h2::proto::streams::store: Queue::push_back
2025-02-11T04:48:39.395108Z TRACE Prioritize::queue_frame{stream.id=StreamId(1)}: h2::proto::streams::store:  -> first entry
2025-02-11T04:48:39.395205Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:48:39.395329Z TRACE h2::proto::streams::streams: drop_stream_ref; stream=Stream { id: StreamId(1), state: State { inner: Closed(EndStream) }, is_counted: true, ref_count: 2, next_pending_send: None, is_pending_send: true, send_flow: FlowControl { window_size: Window(65536), available: Window(0) }, requested_send_capacity: 0, buffered_send_data: 0, send_task: Some(Waker { data: 0x252c21cff00, vtable: 0x7ff79efb6be0 }), pending_send: Deque { indices: Some(Indices { head: 0, tail: 0 }) }, next_pending_send_capacity: None, is_pending_send_capacity: false, send_capacity_inc: false, next_open: None, is_pending_open: false, is_pending_push: false, next_pending_accept: None, is_pending_accept: false, recv_flow: FlowControl { window_size: Window(1048576), available: Window(1048576) }, in_flight_recv_data: 0, next_window_update: None, is_pending_window_update: false, reset_at: None, next_reset_expire: None, pending_recv: Deque { indices: None }, is_recv: false, recv_task: None, push_task: None, pending_push_promises: Queue { indices: None, _p: PhantomData<h2::proto::streams::stream::NextAccept> }, content_length: Omitted }
2025-02-11T04:48:39.395426Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:48:39.396551Z TRACE h2::proto::streams::streams: drop_stream_ref; stream=Stream { id: StreamId(1), state: State { inner: Closed(EndStream) }, is_counted: true, ref_count: 1, next_pending_send: None, is_pending_send: true, send_flow: FlowControl { window_size: Window(65536), available: Window(0) }, requested_send_capacity: 0, buffered_send_data: 0, send_task: Some(Waker { data: 0x252c21cff00, vtable: 0x7ff79efb6be0 }), pending_send: Deque { indices: Some(Indices { head: 0, tail: 0 }) }, next_pending_send_capacity: None, is_pending_send_capacity: false, send_capacity_inc: false, next_open: None, is_pending_open: false, is_pending_push: false, next_pending_accept: None, is_pending_accept: false, recv_flow: FlowControl { window_size: Window(1048576), available: Window(1048576) }, in_flight_recv_data: 0, next_window_update: None, is_pending_window_update: false, reset_at: None, next_reset_expire: None, pending_recv: Deque { indices: None }, is_recv: false, recv_task: None, push_task: None, pending_push_promises: Queue { indices: None, _p: PhantomData<h2::proto::streams::stream::NextAccept> }, content_length: Omitted }
2025-02-11T04:48:39.396671Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:48:39.396803Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T04:48:39.396950Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:39.397217Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: poll_complete
2025-02-11T04:48:39.397420Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:48:39.398986Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: is_pending_reset=false
2025-02-11T04:48:39.399232Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: pop_frame; frame=Headers { stream_id: StreamId(1), flags: (0x5: END_HEADERS | END_STREAM) }
2025-02-11T04:48:39.399447Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: Closed(EndStream) }; is_closed=true; pending_send_empty=true; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:48:39.399613Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::counts: dec_num_streams; stream=StreamId(1)
2025-02-11T04:48:39.399774Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: writing frame=Headers { stream_id: StreamId(1), flags: (0x5: END_HEADERS | END_STREAM) }
2025-02-11T04:48:39.399966Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=Headers { stream_id: StreamId(1), flags: (0x5: END_HEADERS | END_STREAM) }}: h2::codec::framed_write: send frame=Headers { stream_id: StreamId(1), flags: (0x5: END_HEADERS | END_STREAM) }
2025-02-11T04:48:39.402172Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:48:39.402323Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: queued_data_frame=false
2025-02-11T04:48:39.402552Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:48:39.403344Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T04:48:39.403571Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:39.403743Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=34
2025-02-11T04:48:39.403922Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}: h2::codec::framed_read: decoding frame from 34B
2025-02-11T04:48:39.405384Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}: h2::codec::framed_read: frame.kind=Headers
2025-02-11T04:48:39.405552Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}: h2::frame::headers: loading headers; flags=(0x5: END_HEADERS | END_STREAM)
2025-02-11T04:48:39.405720Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}:hpack::decode: h2::hpack::decoder: decode
2025-02-11T04:48:39.405900Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}:hpack::decode: h2::hpack::decoder: rem=25 kind=Indexed
2025-02-11T04:48:39.406187Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}:hpack::decode: h2::hpack::decoder: rem=24 kind=Indexed
2025-02-11T04:48:39.406381Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}:hpack::decode: h2::hpack::decoder: rem=23 kind=Indexed
2025-02-11T04:48:39.411168Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}:hpack::decode: h2::hpack::decoder: rem=22 kind=LiteralWithoutIndexing
2025-02-11T04:48:39.411488Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}:hpack::decode: h2::hpack::decoder: rem=4 kind=Indexed
2025-02-11T04:48:39.411663Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}:hpack::decode: h2::hpack::decoder: rem=3 kind=Indexed
2025-02-11T04:48:39.411827Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}:hpack::decode: h2::hpack::decoder: rem=2 kind=Indexed
2025-02-11T04:48:39.411989Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=34}:hpack::decode: h2::hpack::decoder: rem=1 kind=Indexed
2025-02-11T04:48:39.412146Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=Headers { stream_id: StreamId(3), flags: (0x5: END_HEADERS | END_STREAM) }
2025-02-11T04:48:39.415484Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv HEADERS frame=Headers { stream_id: StreamId(3), flags: (0x5: END_HEADERS | END_STREAM) }
2025-02-11T04:48:39.415727Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=1048576; old=0; new=1048576
2025-02-11T04:48:39.415928Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=65536; old=0; new=65536
2025-02-11T04:48:39.416142Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::streams: recv_headers; stream=StreamId(3); state=State { inner: Idle }
2025-02-11T04:48:39.416327Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::recv: opening stream; init_window=1048576
2025-02-11T04:48:39.416504Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::store: Queue::push_back
2025-02-11T04:48:39.416711Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::store:  -> first entry
2025-02-11T04:48:39.416844Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::counts: transition_after; stream=StreamId(3); state=State { inner: HalfClosedRemote(AwaitingHeaders) }; is_closed=false; pending_send_empty=true; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:48:39.419828Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:39.420034Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: poll_complete
2025-02-11T04:48:39.420235Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:48:39.420469Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:48:39.420667Z TRACE h2::proto::streams::streams: next_incoming; id=StreamId(3), state=State { inner: HalfClosedRemote(AwaitingHeaders) }
2025-02-11T04:48:39.420782Z TRACE h2::server: received incoming
2025-02-11T04:48:39.421008Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T04:48:39.421241Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:39.421369Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: poll_complete
2025-02-11T04:48:39.423236Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:48:39.423412Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:48:39.423690Z TRACE h2::proto::streams::streams: drop_stream_ref; stream=Stream { id: StreamId(3), state: State { inner: HalfClosedRemote(AwaitingHeaders) }, is_counted: true, ref_count: 2, next_pending_send: None, is_pending_send: false, send_flow: FlowControl { window_size: Window(65536), available: Window(0) }, requested_send_capacity: 0, buffered_send_data: 0, send_task: None, pending_send: Deque { indices: None }, next_pending_send_capacity: None, is_pending_send_capacity: false, send_capacity_inc: false, next_open: None, is_pending_open: false, is_pending_push: false, next_pending_accept: None, is_pending_accept: false, recv_flow: FlowControl { window_size: Window(1048576), available: Window(1048576) }, in_flight_recv_data: 0, next_window_update: None, is_pending_window_update: false, reset_at: None, next_reset_expire: None, pending_recv: Deque { indices: None }, is_recv: false, recv_task: None, push_task: None, pending_push_promises: Queue { indices: None, _p: PhantomData<h2::proto::streams::stream::NextAccept> }, content_length: Omitted }
2025-02-11T04:48:39.423799Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(3); state=State { inner: HalfClosedRemote(AwaitingHeaders) }; is_closed=false; pending_send_empty=true; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:48:39.424193Z TRACE h2::proto::streams::send: send_headers; frame=Headers { stream_id: StreamId(3), flags: (0x4: END_HEADERS) }; init_window=65536
2025-02-11T04:48:39.424325Z TRACE Prioritize::queue_frame{stream.id=StreamId(3)}: h2::proto::streams::prioritize: schedule_send stream.id=StreamId(3)
2025-02-11T04:48:39.424417Z TRACE Prioritize::queue_frame{stream.id=StreamId(3)}: h2::proto::streams::store: Queue::push_back
2025-02-11T04:48:39.424504Z TRACE Prioritize::queue_frame{stream.id=StreamId(3)}: h2::proto::streams::store:  -> first entry
2025-02-11T04:48:39.426884Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(3); state=State { inner: HalfClosedRemote(Streaming) }; is_closed=false; pending_send_empty=false; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:48:39.427246Z TRACE reserve_capacity{stream.id=StreamId(3) requested=1 effective=1 curr=0}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::prioritize: requested=1 additional=1 buffered=0 window=65536 conn=1048576000
2025-02-11T04:48:39.427656Z TRACE reserve_capacity{stream.id=StreamId(3) requested=1 effective=1 curr=0}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::prioritize: assigning capacity=1
2025-02-11T04:48:39.427776Z TRACE reserve_capacity{stream.id=StreamId(3) requested=1 effective=1 curr=0}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::stream:   assigned capacity to stream; available=1; buffered=0; id=StreamId(3); max_buffer_size=409600 prev=0
2025-02-11T04:48:39.427892Z TRACE reserve_capacity{stream.id=StreamId(3) requested=1 effective=1 curr=0}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::stream:   notifying task
2025-02-11T04:48:39.428018Z TRACE reserve_capacity{stream.id=StreamId(3) requested=1 effective=1 curr=0}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::prioritize: available=1 requested=1 buffered=0 has_unavailable=true
2025-02-11T04:48:39.428153Z TRACE send_data{sz=23 requested=1}: h2::proto::streams::prioritize: buffered=23
2025-02-11T04:48:39.429183Z TRACE send_data{sz=23 requested=1}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::prioritize: requested=23 additional=22 buffered=23 window=65536 conn=1048575999
2025-02-11T04:48:39.429307Z TRACE send_data{sz=23 requested=1}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::prioritize: assigning capacity=22
2025-02-11T04:48:39.429417Z TRACE send_data{sz=23 requested=1}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::stream:   assigned capacity to stream; available=23; buffered=23; id=StreamId(3); max_buffer_size=409600 prev=0
2025-02-11T04:48:39.429534Z TRACE send_data{sz=23 requested=1}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::prioritize: available=23 requested=23 buffered=23 has_unavailable=true
2025-02-11T04:48:39.429643Z TRACE send_data{sz=23 requested=1}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::store: Queue::push_back
2025-02-11T04:48:39.429754Z TRACE send_data{sz=23 requested=1}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::store:  -> already queued
2025-02-11T04:48:39.429857Z TRACE send_data{sz=23 requested=1}: h2::proto::streams::state: send_close: HalfClosedRemote => Closed
2025-02-11T04:48:39.429973Z TRACE send_data{sz=23 requested=1}: h2::proto::streams::prioritize: available=23 buffered=23
2025-02-11T04:48:39.430088Z TRACE send_data{sz=23 requested=1}:Prioritize::queue_frame{stream.id=StreamId(3)}: h2::proto::streams::prioritize: schedule_send stream.id=StreamId(3)
2025-02-11T04:48:39.433233Z TRACE send_data{sz=23 requested=1}:Prioritize::queue_frame{stream.id=StreamId(3)}: h2::proto::streams::store: Queue::push_back
2025-02-11T04:48:39.433470Z TRACE send_data{sz=23 requested=1}:Prioritize::queue_frame{stream.id=StreamId(3)}: h2::proto::streams::store:  -> already queued
2025-02-11T04:48:39.433606Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(3); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=23; num_recv=1; num_send=0
2025-02-11T04:48:39.433854Z TRACE h2::proto::streams::streams: drop_stream_ref; stream=Stream { id: StreamId(3), state: State { inner: Closed(EndStream) }, is_counted: true, ref_count: 2, next_pending_send: None, is_pending_send: true, send_flow: FlowControl { window_size: Window(65536), available: Window(23) }, requested_send_capacity: 23, buffered_send_data: 23, send_task: Some(Waker { data: 0x252c21d2000, vtable: 0x7ff79efb6be0 }), pending_send: Deque { indices: Some(Indices { head: 0, tail: 1 }) }, next_pending_send_capacity: None, is_pending_send_capacity: false, send_capacity_inc: true, next_open: None, is_pending_open: false, is_pending_push: false, next_pending_accept: None, is_pending_accept: false, recv_flow: FlowControl { window_size: Window(1048576), available: Window(1048576) }, in_flight_recv_data: 0, next_window_update: None, is_pending_window_update: false, reset_at: None, next_reset_expire: None, pending_recv: Deque { indices: None }, is_recv: false, recv_task: None, push_task: None, pending_push_promises: Queue { indices: None, _p: PhantomData<h2::proto::streams::stream::NextAccept> }, content_length: Omitted }
2025-02-11T04:48:39.434050Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(3); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=23; num_recv=1; num_send=0
2025-02-11T04:48:39.436714Z TRACE h2::proto::streams::streams: drop_stream_ref; stream=Stream { id: StreamId(3), state: State { inner: Closed(EndStream) }, is_counted: true, ref_count: 1, next_pending_send: None, is_pending_send: true, send_flow: FlowControl { window_size: Window(65536), available: Window(23) }, requested_send_capacity: 23, buffered_send_data: 23, send_task: Some(Waker { data: 0x252c21d2000, vtable: 0x7ff79efb6be0 }), pending_send: Deque { indices: Some(Indices { head: 0, tail: 1 }) }, next_pending_send_capacity: None, is_pending_send_capacity: false, send_capacity_inc: true, next_open: None, is_pending_open: false, is_pending_push: false, next_pending_accept: None, is_pending_accept: false, recv_flow: FlowControl { window_size: Window(1048576), available: Window(1048576) }, in_flight_recv_data: 0, next_window_update: None, is_pending_window_update: false, reset_at: None, next_reset_expire: None, pending_recv: Deque { indices: None }, is_recv: false, recv_task: None, push_task: None, pending_push_promises: Queue { indices: None, _p: PhantomData<h2::proto::streams::stream::NextAccept> }, content_length: Omitted }
2025-02-11T04:48:39.436937Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(3); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=23; num_recv=1; num_send=0
2025-02-11T04:48:39.437119Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T04:48:39.437376Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:39.437743Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: poll_complete
2025-02-11T04:48:39.438014Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:48:39.438374Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: is_pending_reset=false
2025-02-11T04:48:39.438698Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: pop_frame; frame=Headers { stream_id: StreamId(3), flags: (0x4: END_HEADERS) }
2025-02-11T04:48:39.439185Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::store: Queue::push_back
2025-02-11T04:48:39.439511Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::store:  -> first entry
2025-02-11T04:48:39.439794Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::counts: transition_after; stream=StreamId(3); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=23; num_recv=1; num_send=0
2025-02-11T04:48:39.444201Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: writing frame=Headers { stream_id: StreamId(3), flags: (0x4: END_HEADERS) }
2025-02-11T04:48:39.444475Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=Headers { stream_id: StreamId(3), flags: (0x4: END_HEADERS) }}: h2::codec::framed_write: send frame=Headers { stream_id: StreamId(3), flags: (0x4: END_HEADERS) }
2025-02-11T04:48:39.444673Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:48:39.444963Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: is_pending_reset=false
2025-02-11T04:48:39.445373Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: data frame sz=23 eos=true window=23 available=23 requested=23 buffered=23
2025-02-11T04:48:39.445917Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: sending data frame len=23
2025-02-11T04:48:39.448033Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}:updating stream flow: h2::proto::streams::flow_control: send_data; sz=23; window=65536; available=23
2025-02-11T04:48:39.448227Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}:updating stream flow: h2::proto::streams::stream:   sent stream data; available=0; buffered=0; id=StreamId(3); max_buffer_size=409600 prev=0
2025-02-11T04:48:39.448397Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}:updating connection flow: h2::proto::streams::flow_control: send_data; sz=23; window=1048576000; available=1048576000
2025-02-11T04:48:39.448544Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: pop_frame; frame=Data { stream_id: StreamId(3), flags: (0x1: END_STREAM) }
2025-02-11T04:48:39.448687Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::counts: transition_after; stream=StreamId(3); state=State { inner: Closed(EndStream) }; is_closed=true; pending_send_empty=true; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:48:39.452440Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::counts: dec_num_streams; stream=StreamId(3)
2025-02-11T04:48:39.452650Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: writing frame=Data { stream_id: StreamId(3), flags: (0x1: END_STREAM) }
2025-02-11T04:48:39.452829Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=Data { stream_id: StreamId(3), flags: (0x1: END_STREAM) }}: h2::codec::framed_write: send frame=Data { stream_id: StreamId(3), flags: (0x1: END_STREAM) }
2025-02-11T04:48:39.453036Z TRACE server_handshake:Connection{peer=Server}:poll:try_reclaim_frame: h2::proto::streams::prioritize: reclaimed frame=Data { stream_id: StreamId(3), flags: (0x1: END_STREAM) } sz=0
2025-02-11T04:48:39.453217Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:48:39.453383Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: queued_data_frame=false
2025-02-11T04:48:39.453607Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:48:39.693772Z DEBUG server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::codec::framed_write: send frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }
2025-02-11T04:48:39.694045Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::frame::settings: encoding SETTINGS; len=24
2025-02-11T04:48:39.694397Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::frame::settings: encoding setting; val=MaxConcurrentStreams(200)
2025-02-11T04:48:39.694529Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::frame::settings: encoding setting; val=InitialWindowSize(1048576)
2025-02-11T04:48:39.694664Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::frame::settings: encoding setting; val=MaxFrameSize(16384)
2025-02-11T04:48:39.694789Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::frame::settings: encoding setting; val=MaxHeaderListSize(16384)
2025-02-11T04:48:39.694895Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::codec::framed_write: encoded settings rem=33
2025-02-11T04:48:39.695038Z TRACE server_handshake: h2::server: state=Flushing(_)
2025-02-11T04:48:39.695162Z TRACE server_handshake:flush:FramedWrite::flush: h2::codec::framed_write: queued_data_frame=false
2025-02-11T04:48:39.695309Z TRACE server_handshake:flush:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:48:39.695418Z TRACE server_handshake: h2::server: flush.poll=Ready
2025-02-11T04:48:39.695539Z TRACE server_handshake: h2::proto::streams::flow_control: inc_window; sz=65535; old=0; new=65535
2025-02-11T04:48:39.695655Z TRACE server_handshake: h2::proto::streams::flow_control: inc_window; sz=65535; old=0; new=65535
2025-02-11T04:48:39.695743Z TRACE server_handshake: h2::proto::streams::prioritize: Prioritize::new; flow=FlowControl { window_size: Window(65535), available: Window(65535) }
2025-02-11T04:48:39.695863Z TRACE server_handshake: h2::server: connection established!
2025-02-11T04:48:39.695956Z TRACE server_handshake: h2::proto::streams::recv: set_target_connection_window; target=1048576; available=65535, reserved=0
2025-02-11T04:48:39.696084Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T04:48:39.696231Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:39.696363Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=27
2025-02-11T04:48:39.696515Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=27}: h2::codec::framed_read: decoding frame from 27B
2025-02-11T04:48:39.696651Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=27}: h2::codec::framed_read: frame.kind=Settings
2025-02-11T04:48:39.696789Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=Settings { flags: (0x0), enable_push: 0, max_concurrent_streams: 100, initial_window_size: 65536 }
2025-02-11T04:48:39.699051Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv SETTINGS frame=Settings { flags: (0x0), enable_push: 0, max_concurrent_streams: 100, initial_window_size: 65536 }
2025-02-11T04:48:39.699455Z DEBUG server_handshake:Connection{peer=Server}:poll:poll_ready:FramedWrite::buffer{frame=Settings { flags: (0x1: ACK) }}: h2::codec::framed_write: send frame=Settings { flags: (0x1: ACK) }
2025-02-11T04:48:39.699622Z TRACE server_handshake:Connection{peer=Server}:poll:poll_ready:FramedWrite::buffer{frame=Settings { flags: (0x1: ACK) }}: h2::frame::settings: encoding SETTINGS; len=0
2025-02-11T04:48:39.699780Z TRACE server_handshake:Connection{peer=Server}:poll:poll_ready:FramedWrite::buffer{frame=Settings { flags: (0x1: ACK) }}: h2::codec::framed_write: encoded settings rem=9
2025-02-11T04:48:39.699927Z TRACE server_handshake:Connection{peer=Server}:poll:poll_ready: h2::proto::settings: ACK sent; applying settings
2025-02-11T04:48:39.700078Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:39.703409Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=13
2025-02-11T04:48:39.703596Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=13}: h2::codec::framed_read: decoding frame from 13B
2025-02-11T04:48:39.703747Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=13}: h2::codec::framed_read: frame.kind=WindowUpdate
2025-02-11T04:48:39.703886Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=WindowUpdate { stream_id: StreamId(0), size_increment: 1048510465 }
2025-02-11T04:48:39.704242Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv WINDOW_UPDATE frame=WindowUpdate { stream_id: StreamId(0), size_increment: 1048510465 }
2025-02-11T04:48:39.704407Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=1048510465; old=65535; new=1048576000
2025-02-11T04:48:39.704583Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:39.707452Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=85
2025-02-11T04:48:39.707663Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}: h2::codec::framed_read: decoding frame from 85B
2025-02-11T04:48:39.707859Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}: h2::codec::framed_read: frame.kind=Headers
2025-02-11T04:48:39.708064Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}: h2::frame::headers: loading headers; flags=(0x4: END_HEADERS)
2025-02-11T04:48:39.708280Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}:hpack::decode: h2::hpack::decoder: decode
2025-02-11T04:48:39.708470Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}:hpack::decode: h2::hpack::decoder: rem=76 kind=LiteralWithIndexing
2025-02-11T04:48:39.711554Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}:hpack::decode: h2::hpack::decoder: rem=67 kind=Indexed
2025-02-11T04:48:39.712005Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}:hpack::decode: h2::hpack::decoder: rem=66 kind=LiteralWithIndexing
2025-02-11T04:48:39.712503Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}:hpack::decode: h2::hpack::decoder: rem=58 kind=LiteralWithoutIndexing
2025-02-11T04:48:39.713049Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}:hpack::decode: h2::hpack::decoder: rem=44 kind=LiteralWithIndexing
2025-02-11T04:48:39.713556Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}:hpack::decode: h2::hpack::decoder: rem=27 kind=LiteralWithIndexing
2025-02-11T04:48:39.714012Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}:hpack::decode: h2::hpack::decoder: rem=22 kind=LiteralWithIndexing
2025-02-11T04:48:39.715527Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}:hpack::decode: h2::hpack::decoder: rem=14 kind=LiteralWithIndexing
2025-02-11T04:48:39.715720Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=85}:hpack::decode: h2::hpack::decoder: rem=6 kind=LiteralWithoutIndexing
2025-02-11T04:48:39.715873Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=Headers { stream_id: StreamId(1), flags: (0x4: END_HEADERS) }
2025-02-11T04:48:39.715996Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv HEADERS frame=Headers { stream_id: StreamId(1), flags: (0x4: END_HEADERS) }
2025-02-11T04:48:39.716115Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=65535; old=0; new=65535
2025-02-11T04:48:39.716223Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=65536; old=0; new=65536
2025-02-11T04:48:39.716353Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::streams: recv_headers; stream=StreamId(1); state=State { inner: Idle }
2025-02-11T04:48:39.722552Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::recv: opening stream; init_window=65535
2025-02-11T04:48:39.722814Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::store: Queue::push_back
2025-02-11T04:48:39.722993Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::store:  -> first entry
2025-02-11T04:48:39.723160Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: Open { local: AwaitingHeaders, remote: Streaming } }; is_closed=false; pending_send_empty=true; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:48:39.723347Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:39.723497Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=172
2025-02-11T04:48:39.723669Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=172}: h2::codec::framed_read: decoding frame from 172B
2025-02-11T04:48:39.726517Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=172}: h2::codec::framed_read: frame.kind=Data
2025-02-11T04:48:39.726833Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=Data { stream_id: StreamId(1), flags: (0x1: END_STREAM) }
2025-02-11T04:48:39.727050Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv DATA frame=Data { stream_id: StreamId(1), flags: (0x1: END_STREAM) }
2025-02-11T04:48:39.727219Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::recv: recv_data; size=163; connection=65535; stream=65535
2025-02-11T04:48:39.727364Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: send_data; sz=163; window=65535; available=1048576
2025-02-11T04:48:39.727514Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::state: recv_close: Open => HalfClosedRemote(AwaitingHeaders)
2025-02-11T04:48:39.727654Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: send_data; sz=163; window=65535; available=65535
2025-02-11T04:48:39.727803Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: HalfClosedRemote(AwaitingHeaders) }; is_closed=false; pending_send_empty=true; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:48:39.730524Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:39.730685Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=9
2025-02-11T04:48:39.730867Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=9}: h2::codec::framed_read: decoding frame from 9B
2025-02-11T04:48:39.731094Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=9}: h2::codec::framed_read: frame.kind=Settings
2025-02-11T04:48:39.731266Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=Settings { flags: (0x1: ACK) }
2025-02-11T04:48:39.731492Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv SETTINGS frame=Settings { flags: (0x1: ACK) }
2025-02-11T04:48:39.731740Z DEBUG server_handshake:Connection{peer=Server}:poll: h2::proto::settings: received settings ACK; applying Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }
2025-02-11T04:48:39.734092Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::recv: update_initial_window_size; new=1048576; old=65535
2025-02-11T04:48:39.734256Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::recv: incrementing all windows; inc=983041
2025-02-11T04:48:39.734419Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=983041; old=65372; new=1048413
2025-02-11T04:48:39.734643Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:39.734914Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=WindowUpdate { stream_id: StreamId(0), size_increment: 983041 }}: h2::codec::framed_write: send frame=WindowUpdate { stream_id: StreamId(0), size_increment: 983041 }
2025-02-11T04:48:39.735085Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=WindowUpdate { stream_id: StreamId(0), size_increment: 983041 }}: h2::frame::window_update: encoding WINDOW_UPDATE; id=StreamId(0)
2025-02-11T04:48:39.735276Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=WindowUpdate { stream_id: StreamId(0), size_increment: 983041 }}: h2::codec::framed_write: encoded window_update rem=22
2025-02-11T04:48:39.738329Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=983041; old=65372; new=1048413
2025-02-11T04:48:39.738500Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: poll_complete
2025-02-11T04:48:39.738857Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:48:39.738990Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: queued_data_frame=false
2025-02-11T04:48:39.739203Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:48:39.739312Z TRACE h2::proto::streams::streams: next_incoming; id=StreamId(1), state=State { inner: HalfClosedRemote(AwaitingHeaders) }
2025-02-11T04:48:39.739386Z TRACE h2::server: received incoming
2025-02-11T04:48:39.739538Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T04:48:39.739682Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:39.742634Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: poll_complete
2025-02-11T04:48:39.743049Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:48:39.743346Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:48:39.743733Z TRACE h2::proto::streams::streams: drop_stream_ref; stream=Stream { id: StreamId(1), state: State { inner: HalfClosedRemote(AwaitingHeaders) }, is_counted: true, ref_count: 2, next_pending_send: None, is_pending_send: false, send_flow: FlowControl { window_size: Window(65536), available: Window(0) }, requested_send_capacity: 0, buffered_send_data: 0, send_task: None, pending_send: Deque { indices: None }, next_pending_send_capacity: None, is_pending_send_capacity: false, send_capacity_inc: false, next_open: None, is_pending_open: false, is_pending_push: false, next_pending_accept: None, is_pending_accept: false, recv_flow: FlowControl { window_size: Window(1048413), available: Window(1048413) }, in_flight_recv_data: 163, next_window_update: None, is_pending_window_update: false, reset_at: None, next_reset_expire: None, pending_recv: Deque { indices: None }, is_recv: false, recv_task: None, push_task: None, pending_push_promises: Queue { indices: None, _p: PhantomData<h2::proto::streams::stream::NextAccept> }, content_length: Remaining(0) }
2025-02-11T04:48:39.743879Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: HalfClosedRemote(AwaitingHeaders) }; is_closed=false; pending_send_empty=true; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:48:39.744019Z  INFO hydroxide::server: PROPFIND request
2025-02-11T04:48:39.744212Z TRACE h2::proto::streams::send: send_headers; frame=Headers { stream_id: StreamId(1), flags: (0x4: END_HEADERS) }; init_window=65536
2025-02-11T04:48:39.744435Z TRACE Prioritize::queue_frame{stream.id=StreamId(1)}: h2::proto::streams::prioritize: schedule_send stream.id=StreamId(1)
2025-02-11T04:48:39.744609Z TRACE Prioritize::queue_frame{stream.id=StreamId(1)}: h2::proto::streams::store: Queue::push_back
2025-02-11T04:48:39.746526Z TRACE Prioritize::queue_frame{stream.id=StreamId(1)}: h2::proto::streams::store:  -> first entry
2025-02-11T04:48:39.746639Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: HalfClosedRemote(Streaming) }; is_closed=false; pending_send_empty=false; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:48:39.746857Z TRACE reserve_capacity{stream.id=StreamId(1) requested=1 effective=1 curr=0}:try_assign_capacity{stream.id=StreamId(1)}: h2::proto::streams::prioritize: requested=1 additional=1 buffered=0 window=65536 conn=1048576000
2025-02-11T04:48:39.747028Z TRACE reserve_capacity{stream.id=StreamId(1) requested=1 effective=1 curr=0}:try_assign_capacity{stream.id=StreamId(1)}: h2::proto::streams::prioritize: assigning capacity=1
2025-02-11T04:48:39.747208Z TRACE reserve_capacity{stream.id=StreamId(1) requested=1 effective=1 curr=0}:try_assign_capacity{stream.id=StreamId(1)}: h2::proto::streams::stream:   assigned capacity to stream; available=1; buffered=0; id=StreamId(1); max_buffer_size=409600 prev=0
2025-02-11T04:48:39.747404Z TRACE reserve_capacity{stream.id=StreamId(1) requested=1 effective=1 curr=0}:try_assign_capacity{stream.id=StreamId(1)}: h2::proto::streams::stream:   notifying task
2025-02-11T04:48:39.747584Z TRACE reserve_capacity{stream.id=StreamId(1) requested=1 effective=1 curr=0}:try_assign_capacity{stream.id=StreamId(1)}: h2::proto::streams::prioritize: available=1 requested=1 buffered=0 has_unavailable=true
2025-02-11T04:48:39.747793Z TRACE send_data{sz=80 requested=1}: h2::proto::streams::prioritize: buffered=80
2025-02-11T04:48:39.749367Z TRACE send_data{sz=80 requested=1}:try_assign_capacity{stream.id=StreamId(1)}: h2::proto::streams::prioritize: requested=80 additional=79 buffered=80 window=65536 conn=1048575999
2025-02-11T04:48:39.749589Z TRACE send_data{sz=80 requested=1}:try_assign_capacity{stream.id=StreamId(1)}: h2::proto::streams::prioritize: assigning capacity=79
2025-02-11T04:48:39.749789Z TRACE send_data{sz=80 requested=1}:try_assign_capacity{stream.id=StreamId(1)}: h2::proto::streams::stream:   assigned capacity to stream; available=80; buffered=80; id=StreamId(1); max_buffer_size=409600 prev=0
2025-02-11T04:48:39.750092Z TRACE send_data{sz=80 requested=1}:try_assign_capacity{stream.id=StreamId(1)}: h2::proto::streams::prioritize: available=80 requested=80 buffered=80 has_unavailable=true
2025-02-11T04:48:39.750337Z TRACE send_data{sz=80 requested=1}:try_assign_capacity{stream.id=StreamId(1)}: h2::proto::streams::store: Queue::push_back
2025-02-11T04:48:39.750580Z TRACE send_data{sz=80 requested=1}:try_assign_capacity{stream.id=StreamId(1)}: h2::proto::streams::store:  -> already queued
2025-02-11T04:48:39.750759Z TRACE send_data{sz=80 requested=1}: h2::proto::streams::state: send_close: HalfClosedRemote => Closed
2025-02-11T04:48:39.751112Z TRACE send_data{sz=80 requested=1}: h2::proto::streams::prioritize: available=80 buffered=80
2025-02-11T04:48:39.755371Z TRACE send_data{sz=80 requested=1}:Prioritize::queue_frame{stream.id=StreamId(1)}: h2::proto::streams::prioritize: schedule_send stream.id=StreamId(1)
2025-02-11T04:48:39.755695Z TRACE send_data{sz=80 requested=1}:Prioritize::queue_frame{stream.id=StreamId(1)}: h2::proto::streams::store: Queue::push_back
2025-02-11T04:48:39.755923Z TRACE send_data{sz=80 requested=1}:Prioritize::queue_frame{stream.id=StreamId(1)}: h2::proto::streams::store:  -> already queued
2025-02-11T04:48:39.756136Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=80; num_recv=1; num_send=0
2025-02-11T04:48:39.756422Z TRACE h2::proto::streams::streams: drop_stream_ref; stream=Stream { id: StreamId(1), state: State { inner: Closed(EndStream) }, is_counted: true, ref_count: 2, next_pending_send: None, is_pending_send: true, send_flow: FlowControl { window_size: Window(65536), available: Window(80) }, requested_send_capacity: 80, buffered_send_data: 80, send_task: Some(Waker { data: 0x252c21dd900, vtable: 0x7ff79efb6be0 }), pending_send: Deque { indices: Some(Indices { head: 0, tail: 1 }) }, next_pending_send_capacity: None, is_pending_send_capacity: false, send_capacity_inc: true, next_open: None, is_pending_open: false, is_pending_push: false, next_pending_accept: None, is_pending_accept: false, recv_flow: FlowControl { window_size: Window(1048413), available: Window(1048413) }, in_flight_recv_data: 163, next_window_update: None, is_pending_window_update: false, reset_at: None, next_reset_expire: None, pending_recv: Deque { indices: None }, is_recv: false, recv_task: None, push_task: None, pending_push_promises: Queue { indices: None, _p: PhantomData<h2::proto::streams::stream::NextAccept> }, content_length: Remaining(0) }
2025-02-11T04:48:39.756607Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=80; num_recv=1; num_send=0
2025-02-11T04:48:39.759000Z TRACE h2::proto::streams::streams: drop_stream_ref; stream=Stream { id: StreamId(1), state: State { inner: Closed(EndStream) }, is_counted: true, ref_count: 1, next_pending_send: None, is_pending_send: true, send_flow: FlowControl { window_size: Window(65536), available: Window(80) }, requested_send_capacity: 80, buffered_send_data: 80, send_task: Some(Waker { data: 0x252c21dd900, vtable: 0x7ff79efb6be0 }), pending_send: Deque { indices: Some(Indices { head: 0, tail: 1 }) }, next_pending_send_capacity: None, is_pending_send_capacity: false, send_capacity_inc: true, next_open: None, is_pending_open: false, is_pending_push: false, next_pending_accept: None, is_pending_accept: false, recv_flow: FlowControl { window_size: Window(1048413), available: Window(1048413) }, in_flight_recv_data: 163, next_window_update: None, is_pending_window_update: false, reset_at: None, next_reset_expire: None, pending_recv: Deque { indices: None }, is_recv: false, recv_task: None, push_task: None, pending_push_promises: Queue { indices: None, _p: PhantomData<h2::proto::streams::stream::NextAccept> }, content_length: Remaining(0) }
2025-02-11T04:48:39.759138Z TRACE h2::proto::streams::recv: auto-release closed stream (StreamId(1)) capacity: 163
2025-02-11T04:48:39.759242Z TRACE h2::proto::streams::recv: release_connection_capacity; size=163, connection in_flight_data=163
2025-02-11T04:48:39.759337Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=80; num_recv=1; num_send=0
2025-02-11T04:48:39.759496Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T04:48:39.759650Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:39.759806Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: poll_complete
2025-02-11T04:48:39.759922Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:48:39.761368Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: is_pending_reset=false
2025-02-11T04:48:39.761918Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: pop_frame; frame=Headers { stream_id: StreamId(1), flags: (0x4: END_HEADERS) }
2025-02-11T04:48:39.762420Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::store: Queue::push_back
2025-02-11T04:48:39.762894Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::store:  -> first entry
2025-02-11T04:48:39.763040Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=80; num_recv=1; num_send=0
2025-02-11T04:48:39.763161Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: writing frame=Headers { stream_id: StreamId(1), flags: (0x4: END_HEADERS) }
2025-02-11T04:48:39.764051Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=Headers { stream_id: StreamId(1), flags: (0x4: END_HEADERS) }}: h2::codec::framed_write: send frame=Headers { stream_id: StreamId(1), flags: (0x4: END_HEADERS) }
2025-02-11T04:48:39.764253Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:48:39.764504Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: is_pending_reset=false
2025-02-11T04:48:39.764771Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: data frame sz=80 eos=true window=80 available=80 requested=80 buffered=80
2025-02-11T04:48:39.764984Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: sending data frame len=80
2025-02-11T04:48:39.768255Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}:updating stream flow: h2::proto::streams::flow_control: send_data; sz=80; window=65536; available=80
2025-02-11T04:48:39.768491Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}:updating stream flow: h2::proto::streams::stream:   sent stream data; available=0; buffered=0; id=StreamId(1); max_buffer_size=409600 prev=0
2025-02-11T04:48:39.768725Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}:updating connection flow: h2::proto::streams::flow_control: send_data; sz=80; window=1048576000; available=1048576000
2025-02-11T04:48:39.768909Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: pop_frame; frame=Data { stream_id: StreamId(1), flags: (0x1: END_STREAM) }
2025-02-11T04:48:39.769183Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::counts: transition_after; stream=StreamId(1); state=State { inner: Closed(EndStream) }; is_closed=true; pending_send_empty=true; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T04:48:39.772141Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(1) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::counts: dec_num_streams; stream=StreamId(1)
2025-02-11T04:48:39.772293Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: writing frame=Data { stream_id: StreamId(1), flags: (0x1: END_STREAM) }
2025-02-11T04:48:39.772447Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=Data { stream_id: StreamId(1), flags: (0x1: END_STREAM) }}: h2::codec::framed_write: send frame=Data { stream_id: StreamId(1), flags: (0x1: END_STREAM) }
2025-02-11T04:48:39.772604Z TRACE server_handshake:Connection{peer=Server}:poll:try_reclaim_frame: h2::proto::streams::prioritize: reclaimed frame=Data { stream_id: StreamId(1), flags: (0x1: END_STREAM) } sz=0
2025-02-11T04:48:39.772726Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T04:48:39.772865Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: queued_data_frame=false
2025-02-11T04:48:39.773088Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:48:39.775940Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T04:48:39.776225Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:39.776438Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=26
2025-02-11T04:48:39.776626Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=26}: h2::codec::framed_read: decoding frame from 26B
2025-02-11T04:48:39.776812Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=26}: h2::codec::framed_read: frame.kind=GoAway
2025-02-11T04:48:39.776966Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=GoAway { error_code: NO_ERROR, last_stream_id: StreamId(0), debug_data: b"shutdown\0" }
2025-02-11T04:48:39.777132Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv GOAWAY frame=GoAway { error_code: NO_ERROR, last_stream_id: StreamId(0), debug_data: b"shutdown\0" }
2025-02-11T04:48:39.779923Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:39.780110Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: codec closed
2025-02-11T04:48:39.780251Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::streams: Streams::recv_eof
2025-02-11T04:48:39.780414Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Closing(NO_ERROR, Library)
2025-02-11T04:48:39.780561Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection closing after flush
2025-02-11T04:48:39.780733Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T04:48:39.780979Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Closed(NO_ERROR, Library)
2025-02-11T04:48:39.781107Z TRACE h2::proto::streams::streams: Streams::recv_eof
2025-02-11T04:48:39.781481Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T04:48:39.787780Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T04:48:39.788126Z DEBUG server_handshake:Connection{peer=Server}:poll: h2::proto::connection: Connection::poll; IO error error=ConnectionReset
2025-02-11T04:48:39.788329Z TRACE h2::proto::streams::streams: Streams::recv_eof
2025-02-11T04:55:29.488873Z  INFO hydroxide::server: Shutting down server...
2025-02-11T04:55:29.488980Z TRACE axum::serve: received graceful shutdown signal. Telling tasks to shutdown
2025-02-11T04:55:29.489107Z TRACE axum::serve: signal received, not accepting new connections
2025-02-11T04:55:29.489258Z TRACE axum::serve: waiting for 0 task(s) to finish
2025-02-11T05:14:03.385874Z TRACE hydroxide::cli: No custom port was specified, defaulting to 80
2025-02-11T05:14:03.386125Z TRACE hydroxide::config: Built Config: 
Url = localhost:80,
https = false,
self signed = false,
loglevel = Info
2025-02-11T05:15:52.799760Z TRACE hydroxide::cli: No custom port was specified, defaulting to 80
2025-02-11T05:15:52.800035Z TRACE hydroxide::config: Built Config: 
Url = localhost:80,
https = false,
self signed = false,
loglevel = Info
2025-02-11T05:16:13.310078Z TRACE hydroxide::cli: No custom port was specified, defaulting to 80
2025-02-11T05:16:13.310443Z TRACE hydroxide::config: Built Config: 
Url = localhost:80,
https = false,
self signed = false,
loglevel = Info
2025-02-11T05:16:13.313231Z  INFO hydroxide::server: Starting plain HTTP server on 0.0.0.0:443
2025-02-11T05:17:56.030893Z  INFO hydroxide::server: Shutting down server...
2025-02-11T05:17:56.031051Z TRACE axum::serve: received graceful shutdown signal. Telling tasks to shutdown
2025-02-11T05:17:56.031443Z TRACE axum::serve: signal received, not accepting new connections
2025-02-11T05:17:56.031664Z TRACE axum::serve: waiting for 0 task(s) to finish
2025-02-11T05:18:02.475167Z TRACE hydroxide::cli: No custom port was specified, defaulting to 80
2025-02-11T05:18:02.475369Z TRACE hydroxide::config: Built Config: 
Url = localhost:80,
https = false,
self signed = false,
loglevel = Info
2025-02-11T05:18:02.477178Z  INFO hydroxide::server: Starting plain HTTP server on 0.0.0.0:443
2025-02-11T05:18:30.037551Z  INFO hydroxide::server: Shutting down server...
2025-02-11T05:18:30.037676Z TRACE axum::serve: received graceful shutdown signal. Telling tasks to shutdown
2025-02-11T05:18:30.037852Z TRACE axum::serve: signal received, not accepting new connections
2025-02-11T05:18:30.038033Z TRACE axum::serve: waiting for 0 task(s) to finish
2025-02-11T05:18:41.262225Z TRACE hydroxide::cli: No custom port was specified, defaulting to 80
2025-02-11T05:18:41.262460Z TRACE hydroxide::config: Built Config: 
Url = localhost:80,
https = false,
self signed = false,
loglevel = Info
2025-02-11T05:18:41.264747Z  INFO hydroxide::server: Starting HTTP redirect server on 0.0.0.0:80
2025-02-11T05:18:41.264962Z  INFO hydroxide::server: Starting HTTPS server on 0.0.0.0:443
2025-02-11T05:23:34.267863Z  INFO hydroxide::server: Shutting down server...
2025-02-11T05:23:34.268062Z TRACE axum::serve: received graceful shutdown signal. Telling tasks to shutdown
2025-02-11T05:23:34.268219Z TRACE axum::serve: signal received, not accepting new connections
2025-02-11T05:23:34.268376Z TRACE axum::serve: waiting for 0 task(s) to finish
2025-02-11T05:23:42.886785Z TRACE hydroxide::cli: No custom port was specified, defaulting to 80
2025-02-11T05:23:42.887209Z TRACE hydroxide::config: Built Config: 
Url = localhost:80,
https = false,
self signed = false,
loglevel = Info
2025-02-11T05:23:42.889984Z  INFO hydroxide::server: Starting HTTPS server on 0.0.0.0:443
2025-02-11T05:25:01.272778Z DEBUG server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::codec::framed_write: send frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }
2025-02-11T05:25:01.272952Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::frame::settings: encoding SETTINGS; len=24
2025-02-11T05:25:01.273166Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::frame::settings: encoding setting; val=MaxConcurrentStreams(200)
2025-02-11T05:25:01.273300Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::frame::settings: encoding setting; val=InitialWindowSize(1048576)
2025-02-11T05:25:01.273422Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::frame::settings: encoding setting; val=MaxFrameSize(16384)
2025-02-11T05:25:01.273565Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::frame::settings: encoding setting; val=MaxHeaderListSize(16384)
2025-02-11T05:25:01.273689Z TRACE server_handshake:FramedWrite::buffer{frame=Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }}: h2::codec::framed_write: encoded settings rem=33
2025-02-11T05:25:01.273858Z TRACE server_handshake: h2::server: state=Flushing(_)
2025-02-11T05:25:01.274033Z TRACE server_handshake:flush:FramedWrite::flush: h2::codec::framed_write: queued_data_frame=false
2025-02-11T05:25:01.274228Z TRACE server_handshake:flush:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T05:25:01.274376Z TRACE server_handshake: h2::server: flush.poll=Ready
2025-02-11T05:25:01.274593Z TRACE server_handshake: h2::proto::streams::flow_control: inc_window; sz=65535; old=0; new=65535
2025-02-11T05:25:01.274709Z TRACE server_handshake: h2::proto::streams::flow_control: inc_window; sz=65535; old=0; new=65535
2025-02-11T05:25:01.274816Z TRACE server_handshake: h2::proto::streams::prioritize: Prioritize::new; flow=FlowControl { window_size: Window(65535), available: Window(65535) }
2025-02-11T05:25:01.274977Z TRACE server_handshake: h2::server: connection established!
2025-02-11T05:25:01.275133Z TRACE server_handshake: h2::proto::streams::recv: set_target_connection_window; target=1048576; available=65535, reserved=0
2025-02-11T05:25:01.275304Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T05:25:01.275483Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T05:25:01.275821Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=33
2025-02-11T05:25:01.276022Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=33}: h2::codec::framed_read: decoding frame from 33B
2025-02-11T05:25:01.276170Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=33}: h2::codec::framed_read: frame.kind=Settings
2025-02-11T05:25:01.276326Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=Settings { flags: (0x0), header_table_size: 65536, enable_push: 0, initial_window_size: 131072, max_frame_size: 16384 }
2025-02-11T05:25:01.276482Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv SETTINGS frame=Settings { flags: (0x0), header_table_size: 65536, enable_push: 0, initial_window_size: 131072, max_frame_size: 16384 }
2025-02-11T05:25:01.276698Z DEBUG server_handshake:Connection{peer=Server}:poll:poll_ready:FramedWrite::buffer{frame=Settings { flags: (0x1: ACK) }}: h2::codec::framed_write: send frame=Settings { flags: (0x1: ACK) }
2025-02-11T05:25:01.280429Z TRACE server_handshake:Connection{peer=Server}:poll:poll_ready:FramedWrite::buffer{frame=Settings { flags: (0x1: ACK) }}: h2::frame::settings: encoding SETTINGS; len=0
2025-02-11T05:25:01.280653Z TRACE server_handshake:Connection{peer=Server}:poll:poll_ready:FramedWrite::buffer{frame=Settings { flags: (0x1: ACK) }}: h2::codec::framed_write: encoded settings rem=9
2025-02-11T05:25:01.280812Z TRACE server_handshake:Connection{peer=Server}:poll:poll_ready: h2::proto::settings: ACK sent; applying settings
2025-02-11T05:25:01.280986Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T05:25:01.281176Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=13
2025-02-11T05:25:01.281384Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=13}: h2::codec::framed_read: decoding frame from 13B
2025-02-11T05:25:01.281596Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=13}: h2::codec::framed_read: frame.kind=WindowUpdate
2025-02-11T05:25:01.285267Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=WindowUpdate { stream_id: StreamId(0), size_increment: 12517377 }
2025-02-11T05:25:01.285633Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv WINDOW_UPDATE frame=WindowUpdate { stream_id: StreamId(0), size_increment: 12517377 }
2025-02-11T05:25:01.285826Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=12517377; old=65535; new=12582912
2025-02-11T05:25:01.286113Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T05:25:01.286301Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=346
2025-02-11T05:25:01.286484Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=346}: h2::codec::framed_read: decoding frame from 346B
2025-02-11T05:25:01.286689Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=346}: h2::codec::framed_read: frame.kind=Headers
2025-02-11T05:25:01.289290Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=346}: h2::frame::headers: loading headers; flags=(0x25: END_HEADERS | END_STREAM | PRIORITY)
2025-02-11T05:25:01.289524Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=346}:hpack::decode: h2::hpack::decoder: decode
2025-02-11T05:25:01.289688Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=346}:hpack::decode: h2::hpack::decoder: rem=332 kind=Indexed
2025-02-11T05:25:01.289875Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=346}:hpack::decode: h2::hpack::decoder: rem=331 kind=LiteralWithoutIndexing
2025-02-11T05:25:01.290341Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=346}:hpack::decode: h2::hpack::decoder: rem=328 kind=LiteralWithIndexing
2025-02-11T05:25:01.294229Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=346}:hpack::decode: h2::hpack::decoder: rem=320 kind=Indexed
2025-02-11T05:25:01.294509Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=346}:hpack::decode: h2::hpack::decoder: rem=319 kind=LiteralWithIndexing
2025-02-11T05:25:01.294949Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=346}:hpack::decode: h2::hpack::decoder: rem=257 kind=LiteralWithIndexing
2025-02-11T05:25:01.295648Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=346}:hpack::decode: h2::hpack::decoder: rem=165 kind=LiteralWithIndexing
2025-02-11T05:25:01.295935Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=346}:hpack::decode: h2::hpack::decoder: rem=152 kind=LiteralWithIndexing
2025-02-11T05:25:01.296376Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=346}:hpack::decode: h2::hpack::decoder: rem=132 kind=LiteralWithIndexing
2025-02-11T05:25:01.300248Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=346}:hpack::decode: h2::hpack::decoder: rem=123 kind=LiteralWithIndexing
2025-02-11T05:25:01.300545Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=346}:hpack::decode: h2::hpack::decoder: rem=101 kind=LiteralWithIndexing
2025-02-11T05:25:01.300791Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=346}:hpack::decode: h2::hpack::decoder: rem=82 kind=LiteralWithIndexing
2025-02-11T05:25:01.300987Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=346}:hpack::decode: h2::hpack::decoder: rem=63 kind=LiteralWithIndexing
2025-02-11T05:25:01.301166Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=346}:hpack::decode: h2::hpack::decoder: rem=47 kind=LiteralWithIndexing
2025-02-11T05:25:01.304722Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=346}:hpack::decode: h2::hpack::decoder: rem=32 kind=LiteralWithIndexing
2025-02-11T05:25:01.304992Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=346}:hpack::decode: h2::hpack::decoder: rem=25 kind=LiteralWithIndexing
2025-02-11T05:25:01.305245Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=346}:hpack::decode: h2::hpack::decoder: rem=11 kind=LiteralWithIndexing
2025-02-11T05:25:01.305521Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=Headers { stream_id: StreamId(3), flags: (0x25: END_HEADERS | END_STREAM | PRIORITY), stream_dep: StreamDependency { dependency_id: StreamId(0), weight: 41, is_exclusive: false } }
2025-02-11T05:25:01.305690Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv HEADERS frame=Headers { stream_id: StreamId(3), flags: (0x25: END_HEADERS | END_STREAM | PRIORITY), stream_dep: StreamDependency { dependency_id: StreamId(0), weight: 41, is_exclusive: false } }
2025-02-11T05:25:01.305847Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=65535; old=0; new=65535
2025-02-11T05:25:01.308973Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=131072; old=0; new=131072
2025-02-11T05:25:01.309346Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::streams: recv_headers; stream=StreamId(3); state=State { inner: Idle }
2025-02-11T05:25:01.309667Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::recv: opening stream; init_window=65535
2025-02-11T05:25:01.309979Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::store: Queue::push_back
2025-02-11T05:25:01.310126Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::store:  -> first entry
2025-02-11T05:25:01.310271Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::counts: transition_after; stream=StreamId(3); state=State { inner: HalfClosedRemote(AwaitingHeaders) }; is_closed=false; pending_send_empty=true; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T05:25:01.310435Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T05:25:01.310569Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=13
2025-02-11T05:25:01.312875Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=13}: h2::codec::framed_read: decoding frame from 13B
2025-02-11T05:25:01.313127Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=13}: h2::codec::framed_read: frame.kind=WindowUpdate
2025-02-11T05:25:01.313340Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=WindowUpdate { stream_id: StreamId(3), size_increment: 12451840 }
2025-02-11T05:25:01.313473Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv WINDOW_UPDATE frame=WindowUpdate { stream_id: StreamId(3), size_increment: 12451840 }
2025-02-11T05:25:01.313688Z TRACE server_handshake:Connection{peer=Server}:poll:recv_stream_window_update{stream.id=StreamId(3) stream.state=State { inner: HalfClosedRemote(AwaitingHeaders) } inc=12451840 flow=FlowControl { window_size: Window(131072), available: Window(0) }}: h2::proto::streams::flow_control: inc_window; sz=12451840; old=131072; new=12582912
2025-02-11T05:25:01.314228Z TRACE server_handshake:Connection{peer=Server}:poll:recv_stream_window_update{stream.id=StreamId(3) stream.state=State { inner: HalfClosedRemote(AwaitingHeaders) } inc=12451840 flow=FlowControl { window_size: Window(131072), available: Window(0) }}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::prioritize: requested=0 additional=0 buffered=0 window=12582912 conn=12582912
2025-02-11T05:25:01.316795Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T05:25:01.317066Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=9
2025-02-11T05:25:01.317252Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=9}: h2::codec::framed_read: decoding frame from 9B
2025-02-11T05:25:01.317403Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=9}: h2::codec::framed_read: frame.kind=Settings
2025-02-11T05:25:01.317557Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=Settings { flags: (0x1: ACK) }
2025-02-11T05:25:01.317688Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv SETTINGS frame=Settings { flags: (0x1: ACK) }
2025-02-11T05:25:01.317834Z DEBUG server_handshake:Connection{peer=Server}:poll: h2::proto::settings: received settings ACK; applying Settings { flags: (0x0), max_concurrent_streams: 200, initial_window_size: 1048576, max_frame_size: 16384, max_header_list_size: 16384 }
2025-02-11T05:25:01.321150Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::recv: update_initial_window_size; new=1048576; old=65535
2025-02-11T05:25:01.321438Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::recv: incrementing all windows; inc=983041
2025-02-11T05:25:01.321677Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=983041; old=65535; new=1048576
2025-02-11T05:25:01.321951Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T05:25:01.322278Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=WindowUpdate { stream_id: StreamId(0), size_increment: 983041 }}: h2::codec::framed_write: send frame=WindowUpdate { stream_id: StreamId(0), size_increment: 983041 }
2025-02-11T05:25:01.322551Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=WindowUpdate { stream_id: StreamId(0), size_increment: 983041 }}: h2::frame::window_update: encoding WINDOW_UPDATE; id=StreamId(0)
2025-02-11T05:25:01.322762Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=WindowUpdate { stream_id: StreamId(0), size_increment: 983041 }}: h2::codec::framed_write: encoded window_update rem=22
2025-02-11T05:25:01.326447Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::flow_control: inc_window; sz=983041; old=65535; new=1048576
2025-02-11T05:25:01.326986Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: poll_complete
2025-02-11T05:25:01.327144Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T05:25:01.327335Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: queued_data_frame=false
2025-02-11T05:25:01.327666Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T05:25:01.327829Z TRACE h2::proto::streams::streams: next_incoming; id=StreamId(3), state=State { inner: HalfClosedRemote(AwaitingHeaders) }
2025-02-11T05:25:01.327921Z TRACE h2::server: received incoming
2025-02-11T05:25:01.328145Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T05:25:01.328324Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T05:25:01.331114Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: poll_complete
2025-02-11T05:25:01.331372Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T05:25:01.331621Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T05:25:01.332002Z TRACE h2::proto::streams::streams: drop_stream_ref; stream=Stream { id: StreamId(3), state: State { inner: HalfClosedRemote(AwaitingHeaders) }, is_counted: true, ref_count: 2, next_pending_send: None, is_pending_send: false, send_flow: FlowControl { window_size: Window(12582912), available: Window(0) }, requested_send_capacity: 0, buffered_send_data: 0, send_task: None, pending_send: Deque { indices: None }, next_pending_send_capacity: None, is_pending_send_capacity: false, send_capacity_inc: false, next_open: None, is_pending_open: false, is_pending_push: false, next_pending_accept: None, is_pending_accept: false, recv_flow: FlowControl { window_size: Window(1048576), available: Window(1048576) }, in_flight_recv_data: 0, next_window_update: None, is_pending_window_update: false, reset_at: None, next_reset_expire: None, pending_recv: Deque { indices: None }, is_recv: false, recv_task: None, push_task: None, pending_push_promises: Queue { indices: None, _p: PhantomData<h2::proto::streams::stream::NextAccept> }, content_length: Omitted }
2025-02-11T05:25:01.332126Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(3); state=State { inner: HalfClosedRemote(AwaitingHeaders) }; is_closed=false; pending_send_empty=true; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T05:25:01.332254Z ERROR hydroxide::server: 404 - Not Found: GET https://localhost/
2025-02-11T05:25:01.332476Z TRACE h2::proto::streams::send: send_headers; frame=Headers { stream_id: StreamId(3), flags: (0x4: END_HEADERS) }; init_window=131072
2025-02-11T05:25:01.332611Z TRACE Prioritize::queue_frame{stream.id=StreamId(3)}: h2::proto::streams::prioritize: schedule_send stream.id=StreamId(3)
2025-02-11T05:25:01.332716Z TRACE Prioritize::queue_frame{stream.id=StreamId(3)}: h2::proto::streams::store: Queue::push_back
2025-02-11T05:25:01.334854Z TRACE Prioritize::queue_frame{stream.id=StreamId(3)}: h2::proto::streams::store:  -> first entry
2025-02-11T05:25:01.334986Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(3); state=State { inner: HalfClosedRemote(Streaming) }; is_closed=false; pending_send_empty=false; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T05:25:01.335325Z TRACE reserve_capacity{stream.id=StreamId(3) requested=1 effective=1 curr=0}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::prioritize: requested=1 additional=1 buffered=0 window=12582912 conn=12582912
2025-02-11T05:25:01.335626Z TRACE reserve_capacity{stream.id=StreamId(3) requested=1 effective=1 curr=0}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::prioritize: assigning capacity=1
2025-02-11T05:25:01.336014Z TRACE reserve_capacity{stream.id=StreamId(3) requested=1 effective=1 curr=0}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::stream:   assigned capacity to stream; available=1; buffered=0; id=StreamId(3); max_buffer_size=409600 prev=0
2025-02-11T05:25:01.336290Z TRACE reserve_capacity{stream.id=StreamId(3) requested=1 effective=1 curr=0}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::stream:   notifying task
2025-02-11T05:25:01.336581Z TRACE reserve_capacity{stream.id=StreamId(3) requested=1 effective=1 curr=0}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::prioritize: available=1 requested=1 buffered=0 has_unavailable=true
2025-02-11T05:25:01.336714Z TRACE send_data{sz=39 requested=1}: h2::proto::streams::prioritize: buffered=39
2025-02-11T05:25:01.337475Z TRACE send_data{sz=39 requested=1}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::prioritize: requested=39 additional=38 buffered=39 window=12582912 conn=12582911
2025-02-11T05:25:01.337586Z TRACE send_data{sz=39 requested=1}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::prioritize: assigning capacity=38
2025-02-11T05:25:01.337691Z TRACE send_data{sz=39 requested=1}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::stream:   assigned capacity to stream; available=39; buffered=39; id=StreamId(3); max_buffer_size=409600 prev=0
2025-02-11T05:25:01.337808Z TRACE send_data{sz=39 requested=1}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::prioritize: available=39 requested=39 buffered=39 has_unavailable=true
2025-02-11T05:25:01.337917Z TRACE send_data{sz=39 requested=1}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::store: Queue::push_back
2025-02-11T05:25:01.338022Z TRACE send_data{sz=39 requested=1}:try_assign_capacity{stream.id=StreamId(3)}: h2::proto::streams::store:  -> already queued
2025-02-11T05:25:01.338138Z TRACE send_data{sz=39 requested=1}: h2::proto::streams::state: send_close: HalfClosedRemote => Closed
2025-02-11T05:25:01.338259Z TRACE send_data{sz=39 requested=1}: h2::proto::streams::prioritize: available=39 buffered=39
2025-02-11T05:25:01.341261Z TRACE send_data{sz=39 requested=1}:Prioritize::queue_frame{stream.id=StreamId(3)}: h2::proto::streams::prioritize: schedule_send stream.id=StreamId(3)
2025-02-11T05:25:01.341479Z TRACE send_data{sz=39 requested=1}:Prioritize::queue_frame{stream.id=StreamId(3)}: h2::proto::streams::store: Queue::push_back
2025-02-11T05:25:01.341657Z TRACE send_data{sz=39 requested=1}:Prioritize::queue_frame{stream.id=StreamId(3)}: h2::proto::streams::store:  -> already queued
2025-02-11T05:25:01.341854Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(3); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=39; num_recv=1; num_send=0
2025-02-11T05:25:01.342085Z TRACE h2::proto::streams::streams: drop_stream_ref; stream=Stream { id: StreamId(3), state: State { inner: Closed(EndStream) }, is_counted: true, ref_count: 2, next_pending_send: None, is_pending_send: true, send_flow: FlowControl { window_size: Window(12582912), available: Window(39) }, requested_send_capacity: 39, buffered_send_data: 39, send_task: Some(Waker { data: 0x24689afdc80, vtable: 0x7ff7b137f0c8 }), pending_send: Deque { indices: Some(Indices { head: 0, tail: 1 }) }, next_pending_send_capacity: None, is_pending_send_capacity: false, send_capacity_inc: true, next_open: None, is_pending_open: false, is_pending_push: false, next_pending_accept: None, is_pending_accept: false, recv_flow: FlowControl { window_size: Window(1048576), available: Window(1048576) }, in_flight_recv_data: 0, next_window_update: None, is_pending_window_update: false, reset_at: None, next_reset_expire: None, pending_recv: Deque { indices: None }, is_recv: false, recv_task: None, push_task: None, pending_push_promises: Queue { indices: None, _p: PhantomData<h2::proto::streams::stream::NextAccept> }, content_length: Omitted }
2025-02-11T05:25:01.342289Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(3); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=39; num_recv=1; num_send=0
2025-02-11T05:25:01.345288Z TRACE h2::proto::streams::streams: drop_stream_ref; stream=Stream { id: StreamId(3), state: State { inner: Closed(EndStream) }, is_counted: true, ref_count: 1, next_pending_send: None, is_pending_send: true, send_flow: FlowControl { window_size: Window(12582912), available: Window(39) }, requested_send_capacity: 39, buffered_send_data: 39, send_task: Some(Waker { data: 0x24689afdc80, vtable: 0x7ff7b137f0c8 }), pending_send: Deque { indices: Some(Indices { head: 0, tail: 1 }) }, next_pending_send_capacity: None, is_pending_send_capacity: false, send_capacity_inc: true, next_open: None, is_pending_open: false, is_pending_push: false, next_pending_accept: None, is_pending_accept: false, recv_flow: FlowControl { window_size: Window(1048576), available: Window(1048576) }, in_flight_recv_data: 0, next_window_update: None, is_pending_window_update: false, reset_at: None, next_reset_expire: None, pending_recv: Deque { indices: None }, is_recv: false, recv_task: None, push_task: None, pending_push_promises: Queue { indices: None, _p: PhantomData<h2::proto::streams::stream::NextAccept> }, content_length: Omitted }
2025-02-11T05:25:01.345436Z TRACE h2::proto::streams::counts: transition_after; stream=StreamId(3); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=39; num_recv=1; num_send=0
2025-02-11T05:25:01.345610Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T05:25:01.345765Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T05:25:01.345949Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: poll_complete
2025-02-11T05:25:01.346079Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T05:25:01.346262Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: is_pending_reset=false
2025-02-11T05:25:01.348082Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: pop_frame; frame=Headers { stream_id: StreamId(3), flags: (0x4: END_HEADERS) }
2025-02-11T05:25:01.348318Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::store: Queue::push_back
2025-02-11T05:25:01.348509Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::store:  -> first entry
2025-02-11T05:25:01.348689Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::counts: transition_after; stream=StreamId(3); state=State { inner: Closed(EndStream) }; is_closed=false; pending_send_empty=false; buffered_send_data=39; num_recv=1; num_send=0
2025-02-11T05:25:01.348848Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: writing frame=Headers { stream_id: StreamId(3), flags: (0x4: END_HEADERS) }
2025-02-11T05:25:01.349009Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=Headers { stream_id: StreamId(3), flags: (0x4: END_HEADERS) }}: h2::codec::framed_write: send frame=Headers { stream_id: StreamId(3), flags: (0x4: END_HEADERS) }
2025-02-11T05:25:01.351626Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T05:25:01.352241Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: is_pending_reset=false
2025-02-11T05:25:01.352718Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: data frame sz=39 eos=true window=39 available=39 requested=39 buffered=39
2025-02-11T05:25:01.353107Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: sending data frame len=39
2025-02-11T05:25:01.353541Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}:updating stream flow: h2::proto::streams::flow_control: send_data; sz=39; window=12582912; available=39
2025-02-11T05:25:01.356303Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}:updating stream flow: h2::proto::streams::stream:   sent stream data; available=0; buffered=0; id=StreamId(3); max_buffer_size=409600 prev=0
2025-02-11T05:25:01.356499Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}:updating connection flow: h2::proto::streams::flow_control: send_data; sz=39; window=12582912; available=12582912
2025-02-11T05:25:01.356669Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::prioritize: pop_frame; frame=Data { stream_id: StreamId(3), flags: (0x1: END_STREAM) }
2025-02-11T05:25:01.356867Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::counts: transition_after; stream=StreamId(3); state=State { inner: Closed(EndStream) }; is_closed=true; pending_send_empty=true; buffered_send_data=0; num_recv=1; num_send=0
2025-02-11T05:25:01.357066Z TRACE server_handshake:Connection{peer=Server}:poll:pop_frame:popped{stream.id=StreamId(3) stream.state=State { inner: Closed(EndStream) }}: h2::proto::streams::counts: dec_num_streams; stream=StreamId(3)
2025-02-11T05:25:01.361090Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: writing frame=Data { stream_id: StreamId(3), flags: (0x1: END_STREAM) }
2025-02-11T05:25:01.361415Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedWrite::buffer{frame=Data { stream_id: StreamId(3), flags: (0x1: END_STREAM) }}: h2::codec::framed_write: send frame=Data { stream_id: StreamId(3), flags: (0x1: END_STREAM) }
2025-02-11T05:25:01.361716Z TRACE server_handshake:Connection{peer=Server}:poll:try_reclaim_frame: h2::proto::streams::prioritize: reclaimed frame=Data { stream_id: StreamId(3), flags: (0x1: END_STREAM) } sz=0
2025-02-11T05:25:01.362024Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T05:25:01.362397Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: queued_data_frame=false
2025-02-11T05:25:01.362874Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T05:25:20.041295Z ERROR hydroxide::server: 404 - Not Found: GET /
2025-02-11T05:26:00.410520Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T05:26:00.410758Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T05:26:00.410980Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=17
2025-02-11T05:26:00.411172Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=17}: h2::codec::framed_read: decoding frame from 17B
2025-02-11T05:26:00.411313Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=17}: h2::codec::framed_read: frame.kind=Ping
2025-02-11T05:26:00.411498Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=Ping { ack: false, payload: [0, 0, 0, 0, 0, 0, 0, 0] }
2025-02-11T05:26:00.411695Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv PING frame=Ping { ack: false, payload: [0, 0, 0, 0, 0, 0, 0, 0] }
2025-02-11T05:26:00.411914Z DEBUG server_handshake:Connection{peer=Server}:poll:poll_ready:FramedWrite::buffer{frame=Ping { ack: true, payload: [0, 0, 0, 0, 0, 0, 0, 0] }}: h2::codec::framed_write: send frame=Ping { ack: true, payload: [0, 0, 0, 0, 0, 0, 0, 0] }
2025-02-11T05:26:00.412109Z TRACE server_handshake:Connection{peer=Server}:poll:poll_ready:FramedWrite::buffer{frame=Ping { ack: true, payload: [0, 0, 0, 0, 0, 0, 0, 0] }}: h2::frame::ping: encoding PING; ack=true len=8
2025-02-11T05:26:00.412296Z TRACE server_handshake:Connection{peer=Server}:poll:poll_ready:FramedWrite::buffer{frame=Ping { ack: true, payload: [0, 0, 0, 0, 0, 0, 0, 0] }}: h2::codec::framed_write: encoded ping rem=17
2025-02-11T05:26:00.412462Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T05:26:00.413547Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: poll_complete
2025-02-11T05:26:00.413680Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T05:26:00.413866Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: queued_data_frame=false
2025-02-11T05:26:00.414392Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T05:26:59.157135Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T05:26:59.157378Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T05:26:59.157585Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=17
2025-02-11T05:26:59.157869Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=17}: h2::codec::framed_read: decoding frame from 17B
2025-02-11T05:26:59.158058Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=17}: h2::codec::framed_read: frame.kind=Ping
2025-02-11T05:26:59.158282Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=Ping { ack: false, payload: [0, 0, 0, 0, 0, 0, 0, 0] }
2025-02-11T05:26:59.158493Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv PING frame=Ping { ack: false, payload: [0, 0, 0, 0, 0, 0, 0, 0] }
2025-02-11T05:26:59.158718Z DEBUG server_handshake:Connection{peer=Server}:poll:poll_ready:FramedWrite::buffer{frame=Ping { ack: true, payload: [0, 0, 0, 0, 0, 0, 0, 0] }}: h2::codec::framed_write: send frame=Ping { ack: true, payload: [0, 0, 0, 0, 0, 0, 0, 0] }
2025-02-11T05:26:59.158868Z TRACE server_handshake:Connection{peer=Server}:poll:poll_ready:FramedWrite::buffer{frame=Ping { ack: true, payload: [0, 0, 0, 0, 0, 0, 0, 0] }}: h2::frame::ping: encoding PING; ack=true len=8
2025-02-11T05:26:59.159084Z TRACE server_handshake:Connection{peer=Server}:poll:poll_ready:FramedWrite::buffer{frame=Ping { ack: true, payload: [0, 0, 0, 0, 0, 0, 0, 0] }}: h2::codec::framed_write: encoded ping rem=17
2025-02-11T05:26:59.159238Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T05:26:59.159419Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: poll_complete
2025-02-11T05:26:59.160852Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::prioritize: schedule_pending_open
2025-02-11T05:26:59.161125Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: queued_data_frame=false
2025-02-11T05:26:59.161823Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T05:27:52.277675Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Open
2025-02-11T05:27:52.277920Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T05:27:52.278165Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: read.bytes=17
2025-02-11T05:27:52.278366Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=17}: h2::codec::framed_read: decoding frame from 17B
2025-02-11T05:27:52.278511Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next:FramedRead::decode_frame{offset=17}: h2::codec::framed_read: frame.kind=GoAway
2025-02-11T05:27:52.278652Z DEBUG server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: received frame=GoAway { error_code: NO_ERROR, last_stream_id: StreamId(0) }
2025-02-11T05:27:52.278785Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: recv GOAWAY frame=GoAway { error_code: NO_ERROR, last_stream_id: StreamId(0) }
2025-02-11T05:27:52.279021Z TRACE server_handshake:Connection{peer=Server}:poll:FramedRead::poll_next: h2::codec::framed_read: poll
2025-02-11T05:27:52.279171Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: codec closed
2025-02-11T05:27:52.279297Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::streams::streams: Streams::recv_eof
2025-02-11T05:27:52.279467Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Closing(NO_ERROR, Library)
2025-02-11T05:27:52.279587Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection closing after flush
2025-02-11T05:27:52.279726Z TRACE server_handshake:Connection{peer=Server}:poll:FramedWrite::flush: h2::codec::framed_write: flushing buffer
2025-02-11T05:27:52.280064Z TRACE server_handshake:Connection{peer=Server}:poll: h2::proto::connection: connection.state=Closed(NO_ERROR, Library)
2025-02-11T05:27:52.280302Z TRACE h2::proto::streams::streams: Streams::recv_eof
